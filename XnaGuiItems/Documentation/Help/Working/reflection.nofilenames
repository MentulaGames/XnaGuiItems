<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="XnaGuiItems">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Mentula.GuiItems</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Mentula.GuiItems</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Mentula</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright ©  2014</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>99709cea-4fed-461c-8fdb-0a7e5c741fd7</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Mentula.GuiItems">
      <topicdata group="api" />
      <apidata name="Mentula.GuiItems" group="namespace" />
      <elements>
        <element api="T:Mentula.GuiItems.Utilities" />
      </elements>
    </api>
    <api id="T:Mentula.GuiItems.Utilities">
      <topicdata group="api" />
      <apidata name="Utilities" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Mentula.GuiItems.Utilities.ChangeWindowBorder(Microsoft.Xna.Framework.Game,System.Byte)" />
        <element api="M:Mentula.GuiItems.Utilities.RunInBackground(System.Threading.ThreadStart)" />
        <element api="M:Mentula.GuiItems.Utilities.RunInSTAThread(System.Threading.ThreadStart)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Utilities">
      <topicdata name="Utilities" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Utilities" />
      <apidata name="Utilities" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Mentula.GuiItems.Utilities.ChangeWindowBorder(Microsoft.Xna.Framework.Game,System.Byte)" />
        <element api="M:Mentula.GuiItems.Utilities.RunInBackground(System.Threading.ThreadStart)" />
        <element api="M:Mentula.GuiItems.Utilities.RunInSTAThread(System.Threading.ThreadStart)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems" />
        <type api="T:Mentula.GuiItems.Utilities" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Utilities.ChangeWindowBorder(Microsoft.Xna.Framework.Game,System.Byte)">
      <topicdata group="api" />
      <apidata name="ChangeWindowBorder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="game">
          <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
        </parameter>
        <parameter name="newType">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems" />
        <type api="T:Mentula.GuiItems.Utilities" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Utilities.RunInBackground(System.Threading.ThreadStart)">
      <topicdata group="api" />
      <apidata name="RunInBackground" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Threading.ThreadStart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems" />
        <type api="T:Mentula.GuiItems.Utilities" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Utilities.RunInSTAThread(System.Threading.ThreadStart)">
      <topicdata group="api" />
      <apidata name="RunInSTAThread" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Threading.ThreadStart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems" />
        <type api="T:Mentula.GuiItems.Utilities" ref="true" />
      </containers>
    </api>
    <api id="N:Mentula.GuiItems.Containers">
      <topicdata group="api" />
      <apidata name="Mentula.GuiItems.Containers" group="namespace" />
      <elements>
        <element api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
        <element api="T:Mentula.GuiItems.Containers.Menu`1" />
        <element api="T:Mentula.GuiItems.Containers.TabContainer" />
      </elements>
    </api>
    <api id="T:Mentula.GuiItems.Containers.Menu`1">
      <topicdata group="api" />
      <apidata name="Menu" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Mentula.GuiItems.Containers.Menu`1" />
            </specialization>
          </type>
          <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Mentula.GuiItems.Containers.Menu`1.Dispose">
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
          <element api="M:Mentula.GuiItems.Containers.Menu`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.LoadContent">
          <apidata name="LoadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.UnloadContent">
          <apidata name="UnloadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnDrawOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnDrawOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnVisibleChanged(System.Object,System.EventArgs)">
          <apidata name="OnVisibleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.Visible">
          <apidata name="Visible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visible" />
          <setter name="set_Visible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.Visible">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrder">
          <apidata name="DrawOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DrawOrder" />
          <setter name="set_DrawOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.DrawOrder">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.GraphicsDevice">
          <apidata name="GraphicsDevice" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_GraphicsDevice" />
          <returns>
            <type api="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.VisibleChanged">
          <apidata name="VisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_VisibleChanged" />
          <remover name="remove_VisibleChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.VisibleChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrderChanged">
          <apidata name="DrawOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DrawOrderChanged" />
          <remover name="remove_DrawOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.DrawOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnUpdateOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)">
          <apidata name="OnEnabledChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.Enabled">
          <apidata name="Enabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Enabled" />
          <setter name="set_Enabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.Enabled">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.UpdateOrder">
          <apidata name="UpdateOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateOrder" />
          <setter name="set_UpdateOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.EnabledChanged">
          <apidata name="EnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_EnabledChanged" />
          <remover name="remove_EnabledChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged">
          <apidata name="UpdateOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateOrderChanged" />
          <remover name="remove_UpdateOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Containers.Menu`1.#ctor">
          <element api="M:Mentula.GuiItems.Containers.Menu`1.#ctor(`0)" />
          <element api="M:Mentula.GuiItems.Containers.Menu`1.#ctor(`0,System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddButton(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddDropDown(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddFpsCounter(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddGuiItem" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddLabel(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddPictureBox" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddProgresBar" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddSlider" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddTabContainer(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddTextBox(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="F:Mentula.GuiItems.Containers.Menu`1.autoFocusDropDown" />
        <element api="F:Mentula.GuiItems.Containers.Menu`1.autoFocusTextbox" />
        <element api="F:Mentula.GuiItems.Containers.Menu`1.controlls" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Draw(Microsoft.Xna.Framework.GameTime)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.DrawString(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)" />
        <element api="Overload:Mentula.GuiItems.Containers.Menu`1.FindControl">
          <element api="M:Mentula.GuiItems.Containers.Menu`1.FindControl``1(System.String)" />
          <element api="M:Mentula.GuiItems.Containers.Menu`1.FindControl(System.String)" />
        </element>
        <element api="F:Mentula.GuiItems.Containers.Menu`1.font" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Hide" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Initialize" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.LoadFont(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.LoadTexture(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.RGB(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.RGBA(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="P:Mentula.GuiItems.Containers.Menu`1.ScreenHeight" />
        <element api="P:Mentula.GuiItems.Containers.Menu`1.ScreenHeightMiddle" />
        <element api="P:Mentula.GuiItems.Containers.Menu`1.ScreenWidth" />
        <element api="P:Mentula.GuiItems.Containers.Menu`1.ScreenWidthMiddle" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.SetDefaultFont(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Show" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Update(Microsoft.Xna.Framework.GameTime)" />
        <element api="P:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Game" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Containers.Menu`1">
      <topicdata name="Menu" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Containers.Menu`1" />
      <apidata name="Menu" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Mentula.GuiItems.Containers.Menu`1.Dispose">
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
          <element api="M:Mentula.GuiItems.Containers.Menu`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.LoadContent">
          <apidata name="LoadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.UnloadContent">
          <apidata name="UnloadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnDrawOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnDrawOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnVisibleChanged(System.Object,System.EventArgs)">
          <apidata name="OnVisibleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnUpdateOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)">
          <apidata name="OnEnabledChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddButton(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddDropDown(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddFpsCounter(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddGuiItem" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddLabel(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddPictureBox" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddProgresBar" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddSlider" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddTabContainer(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.AddTextBox(Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Draw(Microsoft.Xna.Framework.GameTime)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.DrawString(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)" />
        <element api="Overload:Mentula.GuiItems.Containers.Menu`1.FindControl">
          <element api="M:Mentula.GuiItems.Containers.Menu`1.FindControl``1(System.String)" />
          <element api="M:Mentula.GuiItems.Containers.Menu`1.FindControl(System.String)" />
        </element>
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Hide" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Initialize" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.LoadFont(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.LoadTexture(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.RGB(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.RGBA(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.SetDefaultFont(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Show" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Update(Microsoft.Xna.Framework.GameTime)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Containers.Menu`1">
      <topicdata name="Menu" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Containers.Menu`1" />
      <apidata name="Menu" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.Visible">
          <apidata name="Visible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visible" />
          <setter name="set_Visible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.Visible">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrder">
          <apidata name="DrawOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DrawOrder" />
          <setter name="set_DrawOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.DrawOrder">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.GraphicsDevice">
          <apidata name="GraphicsDevice" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_GraphicsDevice" />
          <returns>
            <type api="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.Enabled">
          <apidata name="Enabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Enabled" />
          <setter name="set_Enabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.Enabled">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.UpdateOrder">
          <apidata name="UpdateOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateOrder" />
          <setter name="set_UpdateOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Mentula.GuiItems.Containers.Menu`1.ScreenHeight" />
        <element api="P:Mentula.GuiItems.Containers.Menu`1.ScreenHeightMiddle" />
        <element api="P:Mentula.GuiItems.Containers.Menu`1.ScreenWidth" />
        <element api="P:Mentula.GuiItems.Containers.Menu`1.ScreenWidthMiddle" />
        <element api="P:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Game" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Containers.Menu`1">
      <topicdata name="Menu" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Containers.Menu`1" />
      <apidata name="Menu" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.VisibleChanged">
          <apidata name="VisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_VisibleChanged" />
          <remover name="remove_VisibleChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.VisibleChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrderChanged">
          <apidata name="DrawOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DrawOrderChanged" />
          <remover name="remove_DrawOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.DrawOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.EnabledChanged">
          <apidata name="EnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_EnabledChanged" />
          <remover name="remove_EnabledChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged">
          <apidata name="UpdateOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateOrderChanged" />
          <remover name="remove_UpdateOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Containers.Menu`1">
      <topicdata name="Menu" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Containers.Menu`1" />
      <apidata name="Menu" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="F:Mentula.GuiItems.Containers.Menu`1.autoFocusDropDown" />
        <element api="F:Mentula.GuiItems.Containers.Menu`1.autoFocusTextbox" />
        <element api="F:Mentula.GuiItems.Containers.Menu`1.controlls" />
        <element api="F:Mentula.GuiItems.Containers.Menu`1.font" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Containers.Menu`1.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Containers.Menu`1.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Containers.Menu`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Containers.Menu`1.#ctor(`0)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.#ctor(`0,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Containers.Menu`1.FindControl">
      <topicdata name="FindControl" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FindControl" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Containers.Menu`1.FindControl``1(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.Menu`1.FindControl(System.String)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Containers.Menu`1.#ctor" />
      <parameters>
        <parameter name="game">
          <template name="T" index="0" api="T:Mentula.GuiItems.Containers.Menu`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.#ctor(`0,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Containers.Menu`1.#ctor" />
      <parameters>
        <parameter name="game">
          <template name="T" index="0" api="T:Mentula.GuiItems.Containers.Menu`1" />
        </parameter>
        <parameter name="allowRefreshSuppression">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddButton(Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name="AddButton" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Font" optional="true">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddDropDown(Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name="AddDropDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Font" optional="true">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddFpsCounter(Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name="AddFpsCounter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Font" optional="true">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddGuiItem">
      <topicdata group="api" />
      <apidata name="AddGuiItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddLabel(Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name="AddLabel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Font" optional="true">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddPictureBox">
      <topicdata group="api" />
      <apidata name="AddPictureBox" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddProgresBar">
      <topicdata group="api" />
      <apidata name="AddProgresBar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddSlider">
      <topicdata group="api" />
      <apidata name="AddSlider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddTabContainer(Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name="AddTabContainer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Font" optional="true">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.AddTextBox(Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name="AddTextBox" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Font" optional="true">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Containers.Menu`1.autoFocusDropDown">
      <topicdata group="api" />
      <apidata name="autoFocusDropDown" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Containers.Menu`1.autoFocusTextbox">
      <topicdata group="api" />
      <apidata name="autoFocusTextbox" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Containers.Menu`1.controlls">
      <topicdata group="api" />
      <apidata name="controlls" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Mentula.GuiItems.Containers.Menu`1.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Xna.Framework.DrawableGameComponent.Dispose(System.Boolean)">
          <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.Draw(Microsoft.Xna.Framework.GameTime)">
      <topicdata group="api" />
      <apidata name="Draw" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Xna.Framework.DrawableGameComponent.Draw(Microsoft.Xna.Framework.GameTime)">
          <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="gameTime">
          <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Xna.Framework.IDrawable.Draw(Microsoft.Xna.Framework.GameTime)">
          <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.DrawString(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
      <topicdata group="api" />
      <apidata name="DrawString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
        </parameter>
        <parameter name="color">
          <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.FindControl``1(System.String)">
      <topicdata group="api" />
      <apidata name="FindControl" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Containers.Menu`1.FindControl" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TControl">
          <constrained>
            <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TControl" index="0" api="M:Mentula.GuiItems.Containers.Menu`1.FindControl``1(System.String)" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.FindControl(System.String)">
      <topicdata group="api" />
      <apidata name="FindControl" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Containers.Menu`1.FindControl" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Containers.Menu`1.font">
      <topicdata group="api" />
      <apidata name="font" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.Hide">
      <topicdata group="api" />
      <apidata name="Hide" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Xna.Framework.DrawableGameComponent.Initialize">
          <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Microsoft.Xna.Framework.IGameComponent.Initialize">
          <type api="T:Microsoft.Xna.Framework.IGameComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.LoadFont(System.String)">
      <topicdata group="api" />
      <apidata name="LoadFont" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.LoadTexture(System.String)">
      <topicdata group="api" />
      <apidata name="LoadTexture" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.RGB(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="RGB" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="r">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="g">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.RGBA(System.Int32,System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="RGBA" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="r">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="g">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="a">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.Menu`1.ScreenHeight">
      <topicdata group="api" />
      <apidata name="ScreenHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScreenHeight" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.Menu`1.ScreenHeightMiddle">
      <topicdata group="api" />
      <apidata name="ScreenHeightMiddle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScreenHeightMiddle" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.Menu`1.ScreenWidth">
      <topicdata group="api" />
      <apidata name="ScreenWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScreenWidth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.Menu`1.ScreenWidthMiddle">
      <topicdata group="api" />
      <apidata name="ScreenWidthMiddle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScreenWidthMiddle" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.SetDefaultFont(System.String)">
      <topicdata group="api" />
      <apidata name="SetDefaultFont" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.Show">
      <topicdata group="api" />
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.Menu`1.Update(Microsoft.Xna.Framework.GameTime)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)">
          <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="gameTime">
          <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)">
          <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Containers.MenuCollection`1">
      <topicdata group="api" />
      <apidata name="MenuCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" ref="true">
            <specialization>
              <template name="TGame" index="0" api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
            </specialization>
          </type>
          <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Mentula.GuiItems.Containers.MenuCollection`1.Dispose">
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <overrides>
              <member api="M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)">
                <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
              </member>
            </overrides>
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.LoadContent">
          <apidata name="LoadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.UnloadContent">
          <apidata name="UnloadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnDrawOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnDrawOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnVisibleChanged(System.Object,System.EventArgs)">
          <apidata name="OnVisibleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.Visible">
          <apidata name="Visible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visible" />
          <setter name="set_Visible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.Visible">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrder">
          <apidata name="DrawOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DrawOrder" />
          <setter name="set_DrawOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.DrawOrder">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.GraphicsDevice">
          <apidata name="GraphicsDevice" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_GraphicsDevice" />
          <returns>
            <type api="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.VisibleChanged">
          <apidata name="VisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_VisibleChanged" />
          <remover name="remove_VisibleChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.VisibleChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrderChanged">
          <apidata name="DrawOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DrawOrderChanged" />
          <remover name="remove_DrawOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.DrawOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnUpdateOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)">
          <apidata name="OnEnabledChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.Enabled">
          <apidata name="Enabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Enabled" />
          <setter name="set_Enabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.Enabled">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.UpdateOrder">
          <apidata name="UpdateOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateOrder" />
          <setter name="set_UpdateOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.EnabledChanged">
          <apidata name="EnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_EnabledChanged" />
          <remover name="remove_EnabledChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged">
          <apidata name="UpdateOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateOrderChanged" />
          <remover name="remove_UpdateOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.#ctor(`0)" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Add(Mentula.GuiItems.Containers.Menu{`0},System.String)" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.AddRange(System.Collections.Generic.KeyValuePair{System.String,Mentula.GuiItems.Containers.Menu{`0}}[])" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Draw(Microsoft.Xna.Framework.GameTime)" />
        <element api="Overload:Mentula.GuiItems.Containers.MenuCollection`1.Get">
          <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Get``1(System.String)" />
          <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Get(System.String)" />
        </element>
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Hide" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Initialize" />
        <element api="P:Mentula.GuiItems.Containers.MenuCollection`1.Item(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Show(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Update(Microsoft.Xna.Framework.GameTime)" />
        <element api="P:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Game" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Containers.MenuCollection`1">
      <topicdata name="MenuCollection" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Containers.MenuCollection`1" />
      <apidata name="MenuCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Mentula.GuiItems.Containers.MenuCollection`1.Dispose">
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <overrides>
              <member api="M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)">
                <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
              </member>
            </overrides>
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.LoadContent">
          <apidata name="LoadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.UnloadContent">
          <apidata name="UnloadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnDrawOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnDrawOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnVisibleChanged(System.Object,System.EventArgs)">
          <apidata name="OnVisibleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnUpdateOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)">
          <apidata name="OnEnabledChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Add(Mentula.GuiItems.Containers.Menu{`0},System.String)" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.AddRange(System.Collections.Generic.KeyValuePair{System.String,Mentula.GuiItems.Containers.Menu{`0}}[])" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Draw(Microsoft.Xna.Framework.GameTime)" />
        <element api="Overload:Mentula.GuiItems.Containers.MenuCollection`1.Get">
          <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Get``1(System.String)" />
          <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Get(System.String)" />
        </element>
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Hide" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Initialize" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Show(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Update(Microsoft.Xna.Framework.GameTime)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Containers.MenuCollection`1">
      <topicdata name="MenuCollection" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Containers.MenuCollection`1" />
      <apidata name="MenuCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.Visible">
          <apidata name="Visible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visible" />
          <setter name="set_Visible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.Visible">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrder">
          <apidata name="DrawOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DrawOrder" />
          <setter name="set_DrawOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.DrawOrder">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.GraphicsDevice">
          <apidata name="GraphicsDevice" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_GraphicsDevice" />
          <returns>
            <type api="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.Enabled">
          <apidata name="Enabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Enabled" />
          <setter name="set_Enabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.Enabled">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.UpdateOrder">
          <apidata name="UpdateOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateOrder" />
          <setter name="set_UpdateOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Mentula.GuiItems.Containers.MenuCollection`1.Item(System.String)" />
        <element api="P:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Game" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Containers.MenuCollection`1">
      <topicdata name="MenuCollection" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Containers.MenuCollection`1" />
      <apidata name="MenuCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.VisibleChanged">
          <apidata name="VisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_VisibleChanged" />
          <remover name="remove_VisibleChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.VisibleChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrderChanged">
          <apidata name="DrawOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DrawOrderChanged" />
          <remover name="remove_DrawOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.DrawOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.EnabledChanged">
          <apidata name="EnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_EnabledChanged" />
          <remover name="remove_EnabledChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged">
          <apidata name="UpdateOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateOrderChanged" />
          <remover name="remove_UpdateOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Containers.MenuCollection`1.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Get``1(System.String)" />
        <element api="M:Mentula.GuiItems.Containers.MenuCollection`1.Get(System.String)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="game">
          <template name="TGame" index="0" api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.Add(Mentula.GuiItems.Containers.Menu{`0},System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="menu">
          <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true">
            <specialization>
              <template name="TGame" index="0" api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.AddRange(System.Collections.Generic.KeyValuePair{System.String,Mentula.GuiItems.Containers.Menu{`0}}[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="menus" params="true">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true">
                  <specialization>
                    <template name="TGame" index="0" api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.Draw(Microsoft.Xna.Framework.GameTime)">
      <topicdata group="api" />
      <apidata name="Draw" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Xna.Framework.DrawableGameComponent.Draw(Microsoft.Xna.Framework.GameTime)">
          <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="gameTime">
          <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Xna.Framework.IDrawable.Draw(Microsoft.Xna.Framework.GameTime)">
          <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.Get``1(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Containers.MenuCollection`1.Get" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TMenu">
          <constrained>
            <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true">
              <specialization>
                <template name="TGame" index="0" api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
              </specialization>
            </type>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TMenu" index="0" api="M:Mentula.GuiItems.Containers.MenuCollection`1.Get``1(System.String)" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Containers.MenuCollection`1.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true">
          <specialization>
            <template name="TGame" index="0" api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.Hide">
      <topicdata group="api" />
      <apidata name="Hide" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Xna.Framework.DrawableGameComponent.Initialize">
          <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Microsoft.Xna.Framework.IGameComponent.Initialize">
          <type api="T:Microsoft.Xna.Framework.IGameComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.MenuCollection`1.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true">
          <specialization>
            <template name="TGame" index="0" api="T:Mentula.GuiItems.Containers.MenuCollection`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.Show(System.String)">
      <topicdata group="api" />
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="menu">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.MenuCollection`1.Update(Microsoft.Xna.Framework.GameTime)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)">
          <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="gameTime">
          <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)">
          <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Containers.TabContainer">
      <topicdata group="api" />
      <apidata name="TabContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Containers.TabContainer.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Containers.TabContainer.AddTab(System.String,System.Nullable{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Containers.TabContainer.AddToTab(System.String,Mentula.GuiItems.Core.GuiItem[])" />
        <element api="P:Mentula.GuiItems.Containers.TabContainer.AutoFocus" />
        <element api="P:Mentula.GuiItems.Containers.TabContainer.DefaultTabSize" />
        <element api="M:Mentula.GuiItems.Containers.TabContainer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Containers.TabContainer.Refresh" />
        <element api="P:Mentula.GuiItems.Containers.TabContainer.SelectedTab" />
        <element api="P:Mentula.GuiItems.Containers.TabContainer.TabRectangle" />
        <element api="Overload:Mentula.GuiItems.Containers.TabContainer.Update">
          <element api="M:Mentula.GuiItems.Containers.TabContainer.Update(Microsoft.Xna.Framework.Input.MouseState)" />
          <element api="M:Mentula.GuiItems.Containers.TabContainer.Update(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.KeyboardState,System.Single)" />
        </element>
        <element api="P:Mentula.GuiItems.Containers.TabContainer.UseAbsolutePosition" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="Overload:Mentula.GuiItems.Containers.TabContainer.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Containers.TabContainer">
      <topicdata name="TabContainer" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Containers.TabContainer" />
      <apidata name="TabContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Containers.TabContainer.AddTab(System.String,System.Nullable{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Containers.TabContainer.AddToTab(System.String,Mentula.GuiItems.Core.GuiItem[])" />
        <element api="M:Mentula.GuiItems.Containers.TabContainer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Containers.TabContainer.Refresh" />
        <element api="Overload:Mentula.GuiItems.Containers.TabContainer.Update">
          <element api="M:Mentula.GuiItems.Containers.TabContainer.Update(Microsoft.Xna.Framework.Input.MouseState)" />
          <element api="M:Mentula.GuiItems.Containers.TabContainer.Update(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.KeyboardState,System.Single)" />
        </element>
        <element api="Overload:Mentula.GuiItems.Containers.TabContainer.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Containers.TabContainer">
      <topicdata name="TabContainer" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Containers.TabContainer" />
      <apidata name="TabContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Containers.TabContainer.AutoFocus" />
        <element api="P:Mentula.GuiItems.Containers.TabContainer.DefaultTabSize" />
        <element api="P:Mentula.GuiItems.Containers.TabContainer.SelectedTab" />
        <element api="P:Mentula.GuiItems.Containers.TabContainer.TabRectangle" />
        <element api="P:Mentula.GuiItems.Containers.TabContainer.UseAbsolutePosition" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Containers.TabContainer">
      <topicdata name="TabContainer" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Containers.TabContainer" />
      <apidata name="TabContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Containers.TabContainer">
      <topicdata name="TabContainer" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Containers.TabContainer" />
      <apidata name="TabContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Containers.TabContainer.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Containers.TabContainer.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Containers.TabContainer.Update(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.KeyboardState,System.Single)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.TabContainer.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.TabContainer.AddTab(System.String,System.Nullable{Microsoft.Xna.Framework.Color})">
      <topicdata group="api" />
      <apidata name="AddTab" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="color" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.TabContainer.AddToTab(System.String,Mentula.GuiItems.Core.GuiItem[])">
      <topicdata group="api" />
      <apidata name="AddToTab" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tab">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.TabContainer.AutoFocus">
      <topicdata group="api" />
      <apidata name="AutoFocus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoFocus" />
      <setter name="set_AutoFocus" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.TabContainer.DefaultTabSize">
      <topicdata group="api" />
      <apidata name="DefaultTabSize" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultTabSize" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.TabContainer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
      <topicdata group="api" />
      <apidata name="Draw" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="spriteBatch">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.TabContainer.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Refresh">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.TabContainer.SelectedTab">
      <topicdata group="api" />
      <apidata name="SelectedTab" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SelectedTab" />
      <setter name="set_SelectedTab" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.TabContainer.TabRectangle">
      <topicdata group="api" />
      <apidata name="TabRectangle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TabRectangle" />
      <setter name="set_TabRectangle" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Containers.TabContainer.Update(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Containers.TabContainer.Update" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mState">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Use Update(MouseState, KeyboardState, float) instead</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Mentula.GuiItems.Containers.TabContainer.Update(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.KeyboardState,System.Single)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Containers.TabContainer.Update" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mState">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
        <parameter name="kState">
          <type api="T:Microsoft.Xna.Framework.Input.KeyboardState" ref="false" />
        </parameter>
        <parameter name="delta">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Containers.TabContainer.UseAbsolutePosition">
      <topicdata group="api" />
      <apidata name="UseAbsolutePosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UseAbsolutePosition" />
      <setter name="set_UseAbsolutePosition" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Containers" />
        <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
      </containers>
    </api>
    <api id="N:Mentula.GuiItems.Core">
      <topicdata group="api" />
      <apidata name="Mentula.GuiItems.Core" group="namespace" />
      <elements>
        <element api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
        <element api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
        <element api="T:Mentula.GuiItems.Core.MouseEventArgs" />
        <element api="T:Mentula.GuiItems.Core.IndexedClickEventArgs" />
        <element api="T:Mentula.GuiItems.Core.GuiItem" />
        <element api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" />
        <element api="T:Mentula.GuiItems.Core.BorderStyle" />
        <element api="T:Mentula.GuiItems.Core.FlickerStyle" />
        <element api="T:Mentula.GuiItems.Core.MouseClick" />
        <element api="T:Mentula.GuiItems.Core.Anchor" />
        <element api="T:Mentula.GuiItems.Core.ResizeMode" />
        <element api="T:Mentula.GuiItems.Core.InputFlags" />
        <element api="T:Mentula.GuiItems.Core.GuiItemEventHandler" />
        <element api="T:Mentula.GuiItems.Core.IndexedClickEventHandler" />
        <element api="T:Mentula.GuiItems.Core.MouseEventHandler" />
        <element api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" />
        <element api="T:Mentula.GuiItems.Core.InvokeException" />
        <element api="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
        <element api="T:Mentula.GuiItems.Core.Pair" />
        <element api="T:Mentula.GuiItems.Core.ProgressData" />
        <element api="T:Mentula.GuiItems.Core.Size" />
      </elements>
    </api>
    <api id="T:Mentula.GuiItems.Core.Anchor">
      <topicdata group="api" />
      <apidata name="Anchor" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Mentula.GuiItems.Core.Anchor.None" />
        <element api="F:Mentula.GuiItems.Core.Anchor.MiddleWidth" />
        <element api="F:Mentula.GuiItems.Core.Anchor.MiddelHeight" />
        <element api="F:Mentula.GuiItems.Core.Anchor.Middle" />
        <element api="F:Mentula.GuiItems.Core.Anchor.Left" />
        <element api="F:Mentula.GuiItems.Core.Anchor.Right" />
        <element api="F:Mentula.GuiItems.Core.Anchor.Top" />
        <element api="F:Mentula.GuiItems.Core.Anchor.Bottom" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Anchor.Bottom">
      <topicdata group="api" notopic="" />
      <apidata name="Bottom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Anchor.Left">
      <topicdata group="api" notopic="" />
      <apidata name="Left" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Anchor.MiddelHeight">
      <topicdata group="api" notopic="" />
      <apidata name="MiddelHeight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Anchor.Middle">
      <topicdata group="api" notopic="" />
      <apidata name="Middle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Anchor.MiddleWidth">
      <topicdata group="api" notopic="" />
      <apidata name="MiddleWidth" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Anchor.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Anchor.Right">
      <topicdata group="api" notopic="" />
      <apidata name="Right" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Anchor.Top">
      <topicdata group="api" notopic="" />
      <apidata name="Top" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.BorderStyle">
      <topicdata group="api" />
      <apidata name="BorderStyle" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Mentula.GuiItems.Core.BorderStyle.None" />
        <element api="F:Mentula.GuiItems.Core.BorderStyle.FixedSingle" />
        <element api="F:Mentula.GuiItems.Core.BorderStyle.Fixed3D" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.BorderStyle.Fixed3D">
      <topicdata group="api" notopic="" />
      <apidata name="Fixed3D" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.BorderStyle.FixedSingle">
      <topicdata group="api" notopic="" />
      <apidata name="FixedSingle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.BorderStyle.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1">
      <topicdata group="api" />
      <apidata name="DrawableMentulaGameComponent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Mentula.GuiItems.Containers.MenuCollection`1" ref="true" />
          <type api="T:Mentula.GuiItems.Containers.Menu`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.Initialize">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Microsoft.Xna.Framework.GameComponent.Initialize">
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </member>
          </overrides>
          <implements>
            <member api="M:Microsoft.Xna.Framework.IGameComponent.Initialize">
              <type api="T:Microsoft.Xna.Framework.IGameComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Dispose">
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <overrides>
              <member api="M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)">
                <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
              </member>
            </overrides>
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.Draw(Microsoft.Xna.Framework.GameTime)">
          <apidata name="Draw" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="gameTime">
              <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Microsoft.Xna.Framework.IDrawable.Draw(Microsoft.Xna.Framework.GameTime)">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.LoadContent">
          <apidata name="LoadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.UnloadContent">
          <apidata name="UnloadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnDrawOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnDrawOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnVisibleChanged(System.Object,System.EventArgs)">
          <apidata name="OnVisibleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.Visible">
          <apidata name="Visible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visible" />
          <setter name="set_Visible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.Visible">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrder">
          <apidata name="DrawOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DrawOrder" />
          <setter name="set_DrawOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.DrawOrder">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.GraphicsDevice">
          <apidata name="GraphicsDevice" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_GraphicsDevice" />
          <returns>
            <type api="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.VisibleChanged">
          <apidata name="VisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_VisibleChanged" />
          <remover name="remove_VisibleChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.VisibleChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrderChanged">
          <apidata name="DrawOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DrawOrderChanged" />
          <remover name="remove_DrawOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.DrawOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)">
          <apidata name="Update" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="gameTime">
              <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnUpdateOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)">
          <apidata name="OnEnabledChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.Enabled">
          <apidata name="Enabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Enabled" />
          <setter name="set_Enabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.Enabled">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.UpdateOrder">
          <apidata name="UpdateOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateOrder" />
          <setter name="set_UpdateOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.EnabledChanged">
          <apidata name="EnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_EnabledChanged" />
          <remover name="remove_EnabledChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged">
          <apidata name="UpdateOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateOrderChanged" />
          <remover name="remove_UpdateOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.#ctor(`0)" />
        <element api="P:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Game" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1">
      <topicdata name="DrawableMentulaGameComponent" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
      <apidata name="DrawableMentulaGameComponent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.Initialize">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Microsoft.Xna.Framework.GameComponent.Initialize">
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </member>
          </overrides>
          <implements>
            <member api="M:Microsoft.Xna.Framework.IGameComponent.Initialize">
              <type api="T:Microsoft.Xna.Framework.IGameComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Dispose">
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <overrides>
              <member api="M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)">
                <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
              </member>
            </overrides>
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.Draw(Microsoft.Xna.Framework.GameTime)">
          <apidata name="Draw" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="gameTime">
              <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Microsoft.Xna.Framework.IDrawable.Draw(Microsoft.Xna.Framework.GameTime)">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.LoadContent">
          <apidata name="LoadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.UnloadContent">
          <apidata name="UnloadContent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnDrawOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnDrawOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.DrawableGameComponent.OnVisibleChanged(System.Object,System.EventArgs)">
          <apidata name="OnVisibleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)">
          <apidata name="Update" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="gameTime">
              <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnUpdateOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)">
          <apidata name="OnEnabledChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1">
      <topicdata name="DrawableMentulaGameComponent" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
      <apidata name="DrawableMentulaGameComponent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.Visible">
          <apidata name="Visible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visible" />
          <setter name="set_Visible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.Visible">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrder">
          <apidata name="DrawOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DrawOrder" />
          <setter name="set_DrawOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IDrawable.DrawOrder">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.DrawableGameComponent.GraphicsDevice">
          <apidata name="GraphicsDevice" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_GraphicsDevice" />
          <returns>
            <type api="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.Enabled">
          <apidata name="Enabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Enabled" />
          <setter name="set_Enabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.Enabled">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.UpdateOrder">
          <apidata name="UpdateOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateOrder" />
          <setter name="set_UpdateOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Game" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1">
      <topicdata name="DrawableMentulaGameComponent" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
      <apidata name="DrawableMentulaGameComponent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.VisibleChanged">
          <apidata name="VisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_VisibleChanged" />
          <remover name="remove_VisibleChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.VisibleChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.DrawableGameComponent.DrawOrderChanged">
          <apidata name="DrawOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DrawOrderChanged" />
          <remover name="remove_DrawOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IDrawable.DrawOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IDrawable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.DrawableGameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.EnabledChanged">
          <apidata name="EnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_EnabledChanged" />
          <remover name="remove_EnabledChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged">
          <apidata name="UpdateOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateOrderChanged" />
          <remover name="remove_UpdateOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="game">
          <template name="TGame" index="0" api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1.Game">
      <topicdata group="api" />
      <apidata name="Game" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Game" />
      <returns>
        <template name="TGame" index="0" api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.DrawableMentulaGameComponent`1" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.FlickerStyle">
      <topicdata group="api" />
      <apidata name="FlickerStyle" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Mentula.GuiItems.Core.FlickerStyle.Slow" />
        <element api="F:Mentula.GuiItems.Core.FlickerStyle.Normal" />
        <element api="F:Mentula.GuiItems.Core.FlickerStyle.Fast" />
        <element api="F:Mentula.GuiItems.Core.FlickerStyle.None" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.FlickerStyle.Fast">
      <topicdata group="api" notopic="" />
      <apidata name="Fast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.FlickerStyle.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.FlickerStyle.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.FlickerStyle.Slow">
      <topicdata group="api" notopic="" />
      <apidata name="Slow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.GuiItem">
      <topicdata group="api" />
      <apidata name="GuiItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
          <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
          <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
          <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
          <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
          <type api="T:Mentula.GuiItems.Containers.TabContainer" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:Mentula.GuiItems.Core.Interfaces.IToggleable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.GuiItem.#ctor">
          <element api="M:Mentula.GuiItems.Core.GuiItem.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.DefaultBackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.DefaultBounds" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.DefaultForeColor" />
        <element api="Overload:Mentula.GuiItems.Core.GuiItem.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Refresh" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.GuiItem">
      <topicdata name="GuiItem" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.GuiItem" />
      <apidata name="GuiItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.GuiItem.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Refresh" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.GuiItem">
      <topicdata name="GuiItem" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.GuiItem" />
      <apidata name="GuiItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.DefaultBackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.DefaultBounds" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.DefaultForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Core.GuiItem">
      <topicdata name="GuiItem" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Core.GuiItem" />
      <apidata name="GuiItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Core.GuiItem">
      <topicdata name="GuiItem" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Core.GuiItem" />
      <apidata name="GuiItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.GuiItem.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.GuiItem.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.GuiItem.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.GuiItem.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.GuiItem.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="bounds">
          <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.BackColor">
      <topicdata group="api" />
      <apidata name="BackColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BackColor" />
      <setter name="set_BackColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged">
      <topicdata group="api" />
      <apidata name="BackColorChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BackColorChanged" />
      <remover name="remove_BackColorChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage">
      <topicdata group="api" />
      <apidata name="BackgroundImage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BackgroundImage" />
      <setter name="set_BackgroundImage" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged">
      <topicdata group="api" />
      <apidata name="BackgroundImageChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BackgroundImageChanged" />
      <remover name="remove_BackgroundImageChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.GuiItem.batch">
      <topicdata group="api" />
      <apidata name="batch" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Bounds">
      <topicdata group="api" />
      <apidata name="Bounds" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Bounds" />
      <setter name="set_Bounds" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.Click">
      <topicdata group="api" />
      <apidata name="Click" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Click" />
      <remover name="remove_Click" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.MouseEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.DefaultBackColor">
      <topicdata group="api" />
      <apidata name="DefaultBackColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultBackColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.DefaultBounds">
      <topicdata group="api" />
      <apidata name="DefaultBounds" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultBounds" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.DefaultForeColor">
      <topicdata group="api" />
      <apidata name="DefaultForeColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultForeColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.GuiItem.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Mentula.GuiItems.Core.GuiItem.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Disposing">
      <topicdata group="api" />
      <apidata name="Disposing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Disposing" />
      <setter name="set_Disposing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
      <topicdata group="api" />
      <apidata name="Draw" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="spriteBatch">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.ForeColor">
      <topicdata group="api" />
      <apidata name="ForeColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ForeColor" />
      <setter name="set_ForeColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged">
      <topicdata group="api" />
      <apidata name="ForeColorChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ForeColorChanged" />
      <remover name="remove_ForeColorChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs">
      <topicdata group="api" />
      <apidata name="GetMouseEventArgs" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.MouseEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name="GetRotatedMouse" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="state">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Height">
      <topicdata group="api" />
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Height" />
      <setter name="set_Height" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.Hide">
      <topicdata group="api" />
      <apidata name="Hide" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Mentula.GuiItems.Core.Interfaces.IToggleable.Hide">
          <type api="T:Mentula.GuiItems.Core.Interfaces.IToggleable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.Hover">
      <topicdata group="api" />
      <apidata name="Hover" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Hover" />
      <remover name="remove_Hover" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.MouseEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.IsDisposed">
      <topicdata group="api" />
      <apidata name="IsDisposed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_IsDisposed" />
      <setter name="set_IsDisposed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.GuiItem.leftDown">
      <topicdata group="api" />
      <apidata name="leftDown" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.Move">
      <topicdata group="api" />
      <apidata name="Move" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Move" />
      <remover name="remove_Move" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})">
      <topicdata group="api" />
      <apidata name="MoveRelative" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="anchor">
          <type api="T:Mentula.GuiItems.Core.Anchor" ref="false" />
        </parameter>
        <parameter name="x" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="y" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.NameChanged">
      <topicdata group="api" />
      <apidata name="NameChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_NameChanged" />
      <remover name="remove_NameChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})">
      <topicdata group="api" />
      <apidata name="OnBackColorChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})">
      <topicdata group="api" />
      <apidata name="OnBackgroundImageChaned" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})">
      <topicdata group="api" />
      <apidata name="OnForeColorChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})">
      <topicdata group="api" />
      <apidata name="OnMove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})">
      <topicdata group="api" />
      <apidata name="OnNameChange" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})">
      <topicdata group="api" />
      <apidata name="OnResize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})">
      <topicdata group="api" />
      <apidata name="OnRotationChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})">
      <topicdata group="api" />
      <apidata name="OnVisibilityChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Origin">
      <topicdata group="api" />
      <apidata name="Origin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Origin" />
      <setter name="set_Origin" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.GuiItem.over">
      <topicdata group="api" />
      <apidata name="over" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.PerformClick">
      <topicdata group="api" />
      <apidata name="PerformClick" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.Resize">
      <topicdata group="api" />
      <apidata name="Resize" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Resize" />
      <remover name="remove_Resize" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.GuiItem.rightDown">
      <topicdata group="api" />
      <apidata name="rightDown" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.Rotated">
      <topicdata group="api" />
      <apidata name="Rotated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Rotated" />
      <remover name="remove_Rotated" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Rotation">
      <topicdata group="api" />
      <apidata name="Rotation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Rotation" />
      <setter name="set_Rotation" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.Show">
      <topicdata group="api" />
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Mentula.GuiItems.Core.Interfaces.IToggleable.Show">
          <type api="T:Mentula.GuiItems.Core.Interfaces.IToggleable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Size" />
      <setter name="set_Size" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw">
      <topicdata group="api" />
      <apidata name="SuppressDraw" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SuppressDraw" />
      <setter name="set_SuppressDraw" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate">
      <topicdata group="api" />
      <apidata name="SuppressUpdate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SuppressUpdate" />
      <setter name="set_SuppressUpdate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.GuiItem.textures">
      <topicdata group="api" />
      <apidata name="textures" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="mState">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged">
      <topicdata group="api" />
      <apidata name="VisibilityChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_VisibilityChanged" />
      <remover name="remove_VisibilityChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Visible">
      <topicdata group="api" />
      <apidata name="Visible" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Visible" />
      <setter name="set_Visible" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Width">
      <topicdata group="api" />
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Width" />
      <setter name="set_Width" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.X">
      <topicdata group="api" />
      <apidata name="X" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_X" />
      <setter name="set_X" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.Y">
      <topicdata group="api" />
      <apidata name="Y" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Y" />
      <setter name="set_Y" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection">
      <topicdata group="api" />
      <apidata name="GuiItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.#ctor(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Add(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Clear" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Contains(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.CopyTo(Mentula.GuiItems.Core.GuiItem[],System.Int32)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Count" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.GetEnumerator" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.IndexOf(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Insert(System.Int32,Mentula.GuiItems.Core.GuiItem)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.IsReadOnly" />
        <element api="Overload:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item">
          <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item(System.Int32)" />
          <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item(System.String)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Items" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Owner" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Remove(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection">
      <topicdata name="GuiItemCollection" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" />
      <apidata name="GuiItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Add(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Clear" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Contains(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.CopyTo(Mentula.GuiItems.Core.GuiItem[],System.Int32)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.GetEnumerator" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.IndexOf(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Insert(System.Int32,Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Remove(Mentula.GuiItems.Core.GuiItem)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection">
      <topicdata name="GuiItemCollection" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" />
      <apidata name="GuiItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Count" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.IsReadOnly" />
        <element api="Overload:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item">
          <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item(System.Int32)" />
          <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item(System.String)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Items" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Owner" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item(System.Int32)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.#ctor(Mentula.GuiItems.Core.GuiItem)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Add(Mentula.GuiItems.Core.GuiItem)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Contains(Mentula.GuiItems.Core.GuiItem)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.CopyTo(Mentula.GuiItems.Core.GuiItem[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.IndexOf(Mentula.GuiItems.Core.GuiItem)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Insert(System.Int32,Mentula.GuiItems.Core.GuiItem)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" overload="Overload:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" overload="Overload:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Items">
      <topicdata group="api" />
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Items" />
      <setter name="set_Items" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Owner">
      <topicdata group="api" />
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Owner" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.Remove(Mentula.GuiItems.Core.GuiItem)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.GuiItem.GuiItemCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.GuiItem.GuiItemCollection" ref="true">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.GuiItemEventHandler">
      <topicdata group="api" />
      <apidata name="GuiItemEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.IndexedClickEventArgs">
      <topicdata group="api" />
      <apidata name="IndexedClickEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.IndexedClickEventArgs.#ctor(System.Int32)" />
        <element api="F:Mentula.GuiItems.Core.IndexedClickEventArgs.Empty" />
        <element api="F:Mentula.GuiItems.Core.IndexedClickEventArgs.Index" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.IndexedClickEventArgs">
      <topicdata name="IndexedClickEventArgs" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.IndexedClickEventArgs" />
      <apidata name="IndexedClickEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.IndexedClickEventArgs" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Core.IndexedClickEventArgs">
      <topicdata name="IndexedClickEventArgs" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Core.IndexedClickEventArgs" />
      <apidata name="IndexedClickEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.IndexedClickEventArgs.Empty" />
        <element api="F:Mentula.GuiItems.Core.IndexedClickEventArgs.Index" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.IndexedClickEventArgs" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.IndexedClickEventArgs.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.IndexedClickEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.IndexedClickEventArgs.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.IndexedClickEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.IndexedClickEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.IndexedClickEventArgs.Index">
      <topicdata group="api" />
      <apidata name="Index" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.IndexedClickEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.IndexedClickEventHandler">
      <topicdata group="api" />
      <apidata name="IndexedClickEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.IndexedClickEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.InputFlags">
      <topicdata group="api" />
      <apidata name="InputFlags" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Mentula.GuiItems.Core.InputFlags.NO_FLAGS" />
        <element api="F:Mentula.GuiItems.Core.InputFlags.NO_CHARS" />
        <element api="F:Mentula.GuiItems.Core.InputFlags.NO_NUMS" />
        <element api="F:Mentula.GuiItems.Core.InputFlags.NO_SPEC" />
        <element api="F:Mentula.GuiItems.Core.InputFlags.NO_SPACE" />
        <element api="F:Mentula.GuiItems.Core.InputFlags.TEXT" />
        <element api="F:Mentula.GuiItems.Core.InputFlags.NUMS" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.InputFlags.NO_CHARS">
      <topicdata group="api" notopic="" />
      <apidata name="NO_CHARS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.InputFlags.NO_FLAGS">
      <topicdata group="api" notopic="" />
      <apidata name="NO_FLAGS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.InputFlags.NO_NUMS">
      <topicdata group="api" notopic="" />
      <apidata name="NO_NUMS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.InputFlags.NO_SPACE">
      <topicdata group="api" notopic="" />
      <apidata name="NO_SPACE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.InputFlags.NO_SPEC">
      <topicdata group="api" notopic="" />
      <apidata name="NO_SPEC" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.InputFlags.NUMS">
      <topicdata group="api" notopic="" />
      <apidata name="NUMS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.InputFlags.TEXT">
      <topicdata group="api" notopic="" />
      <apidata name="TEXT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InputFlags" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.InvokeException">
      <topicdata group="api" />
      <apidata name="InvokeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.InvokeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:Mentula.GuiItems.Core.InvokeException.StackTrace" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.InvokeException">
      <topicdata name="InvokeException" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.InvokeException" />
      <apidata name="InvokeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.InvokeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InvokeException" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.InvokeException">
      <topicdata name="InvokeException" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.InvokeException" />
      <apidata name="InvokeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Mentula.GuiItems.Core.InvokeException.StackTrace" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InvokeException" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Core.InvokeException">
      <topicdata name="InvokeException" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Core.InvokeException" />
      <apidata name="InvokeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InvokeException" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.InvokeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InvokeException" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.InvokeException.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.StackTrace">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_StackTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.InvokeException" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.MentulaGameComponent`1">
      <topicdata group="api" />
      <apidata name="MentulaGameComponent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Initialize">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Microsoft.Xna.Framework.IGameComponent.Initialize">
              <type api="T:Microsoft.Xna.Framework.IGameComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)">
          <apidata name="Update" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="gameTime">
              <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.MentulaGameComponent`1.Dispose">
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnUpdateOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)">
          <apidata name="OnEnabledChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.Enabled">
          <apidata name="Enabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Enabled" />
          <setter name="set_Enabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.Enabled">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.UpdateOrder">
          <apidata name="UpdateOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateOrder" />
          <setter name="set_UpdateOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.EnabledChanged">
          <apidata name="EnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_EnabledChanged" />
          <remover name="remove_EnabledChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged">
          <apidata name="UpdateOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateOrderChanged" />
          <remover name="remove_UpdateOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.MentulaGameComponent`1.#ctor(`0)" />
        <element api="P:Mentula.GuiItems.Core.MentulaGameComponent`1.Game" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.MentulaGameComponent`1">
      <topicdata name="MentulaGameComponent" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
      <apidata name="MentulaGameComponent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Initialize">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Microsoft.Xna.Framework.IGameComponent.Initialize">
              <type api="T:Microsoft.Xna.Framework.IGameComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)">
          <apidata name="Update" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="gameTime">
              <type api="T:Microsoft.Xna.Framework.GameTime" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.MentulaGameComponent`1.Dispose">
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.Xna.Framework" />
              <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)">
          <apidata name="OnUpdateOrderChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)">
          <apidata name="OnEnabledChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="args">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.MentulaGameComponent`1">
      <topicdata name="MentulaGameComponent" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
      <apidata name="MentulaGameComponent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Microsoft.Xna.Framework.GameComponent.Enabled">
          <apidata name="Enabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Enabled" />
          <setter name="set_Enabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.Enabled">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.Xna.Framework.GameComponent.UpdateOrder">
          <apidata name="UpdateOrder" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateOrder" />
          <setter name="set_UpdateOrder" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="P:Mentula.GuiItems.Core.MentulaGameComponent`1.Game" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Core.MentulaGameComponent`1">
      <topicdata name="MentulaGameComponent" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
      <apidata name="MentulaGameComponent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TGame">
          <constrained>
            <type api="T:Microsoft.Xna.Framework.Game" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:Microsoft.Xna.Framework.GameComponent.EnabledChanged">
          <apidata name="EnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_EnabledChanged" />
          <remover name="remove_EnabledChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged">
          <apidata name="UpdateOrderChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateOrderChanged" />
          <remover name="remove_UpdateOrderChanged" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged">
              <type api="T:Microsoft.Xna.Framework.IUpdateable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.Xna.Framework.GameComponent.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.Xna.Framework.Game" module="Microsoft.Xna.Framework.Game" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Xna.Framework" />
            <type api="T:Microsoft.Xna.Framework.GameComponent" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.MentulaGameComponent`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="game">
          <template name="TGame" index="0" api="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MentulaGameComponent`1" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.MentulaGameComponent`1.Game">
      <topicdata group="api" />
      <apidata name="Game" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Game" />
      <returns>
        <template name="TGame" index="0" api="T:Mentula.GuiItems.Core.MentulaGameComponent`1" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MentulaGameComponent`1" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.MouseClick">
      <topicdata group="api" />
      <apidata name="MouseClick" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Mentula.GuiItems.Core.MouseClick.Default" />
        <element api="F:Mentula.GuiItems.Core.MouseClick.Left" />
        <element api="F:Mentula.GuiItems.Core.MouseClick.Right" />
        <element api="F:Mentula.GuiItems.Core.MouseClick.Double" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.MouseClick.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.MouseClick.Double">
      <topicdata group="api" notopic="" />
      <apidata name="Double" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.MouseClick.Left">
      <topicdata group="api" notopic="" />
      <apidata name="Left" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.MouseClick.Right">
      <topicdata group="api" notopic="" />
      <apidata name="Right" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.MouseEventArgs">
      <topicdata group="api" />
      <apidata name="MouseEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.MouseEventArgs.#ctor(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="F:Mentula.GuiItems.Core.MouseEventArgs.Empty" />
        <element api="F:Mentula.GuiItems.Core.MouseEventArgs.State" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.MouseEventArgs">
      <topicdata name="MouseEventArgs" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.MouseEventArgs" />
      <apidata name="MouseEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseEventArgs" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Core.MouseEventArgs">
      <topicdata name="MouseEventArgs" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Core.MouseEventArgs" />
      <apidata name="MouseEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.MouseEventArgs.Empty" />
        <element api="F:Mentula.GuiItems.Core.MouseEventArgs.State" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseEventArgs" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.MouseEventArgs.#ctor(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="state">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.MouseEventArgs.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.MouseEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.MouseEventArgs.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.MouseEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.MouseEventHandler">
      <topicdata group="api" />
      <apidata name="MouseEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.MouseEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.Pair">
      <topicdata group="api" />
      <apidata name="Pair" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.Pair.#ctor">
          <element api="M:Mentula.GuiItems.Core.Pair.#ctor(System.String)" />
          <element api="M:Mentula.GuiItems.Core.Pair.#ctor(System.String,Microsoft.Xna.Framework.Color)" />
        </element>
        <element api="F:Mentula.GuiItems.Core.Pair.Color" />
        <element api="Overload:Mentula.GuiItems.Core.Pair.Equals">
          <element api="M:Mentula.GuiItems.Core.Pair.Equals(System.Object)" />
          <element api="M:Mentula.GuiItems.Core.Pair.Equals(Mentula.GuiItems.Core.Pair)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Pair.GetHashCode" />
        <element api="F:Mentula.GuiItems.Core.Pair.Text" />
        <element api="M:Mentula.GuiItems.Core.Pair.ToString" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.Pair">
      <topicdata name="Pair" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.Pair" />
      <apidata name="Pair" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.Pair.Equals">
          <element api="M:Mentula.GuiItems.Core.Pair.Equals(System.Object)" />
          <element api="M:Mentula.GuiItems.Core.Pair.Equals(Mentula.GuiItems.Core.Pair)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Pair.GetHashCode" />
        <element api="M:Mentula.GuiItems.Core.Pair.ToString" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Core.Pair">
      <topicdata name="Pair" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Core.Pair" />
      <apidata name="Pair" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.Pair.Color" />
        <element api="F:Mentula.GuiItems.Core.Pair.Text" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Pair.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Pair.#ctor(System.String)" />
        <element api="M:Mentula.GuiItems.Core.Pair.#ctor(System.String,Microsoft.Xna.Framework.Color)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Pair.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Pair.Equals(System.Object)" />
        <element api="M:Mentula.GuiItems.Core.Pair.Equals(Mentula.GuiItems.Core.Pair)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Pair.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.Pair.#ctor" />
      <parameters>
        <parameter name="txt">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Pair.#ctor(System.String,Microsoft.Xna.Framework.Color)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.Pair.#ctor" />
      <parameters>
        <parameter name="txt">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clr">
          <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Pair.Color">
      <topicdata group="api" />
      <apidata name="Color" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Pair.Equals(Mentula.GuiItems.Core.Pair)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.Pair.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Pair.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.Pair.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Pair.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Pair.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Pair.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.ProgressData">
      <topicdata group="api" />
      <apidata name="ProgressData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.ProgressData.#ctor">
          <element api="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32)" />
          <element api="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32,System.Int32)" />
          <element api="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.ProgressData.ChangeValue(System.Int32)" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.DefaultMaximum" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.DefaultMinimum" />
        <element api="Overload:Mentula.GuiItems.Core.ProgressData.Equals">
          <element api="M:Mentula.GuiItems.Core.ProgressData.Equals(System.Object)" />
          <element api="M:Mentula.GuiItems.Core.ProgressData.Equals(Mentula.GuiItems.Core.ProgressData)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.ProgressData.GetHashCode" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.Maximum" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.Minimum" />
        <element api="M:Mentula.GuiItems.Core.ProgressData.op_Equality(Mentula.GuiItems.Core.ProgressData,Mentula.GuiItems.Core.ProgressData)" />
        <element api="M:Mentula.GuiItems.Core.ProgressData.op_Inequality(Mentula.GuiItems.Core.ProgressData,Mentula.GuiItems.Core.ProgressData)" />
        <element api="M:Mentula.GuiItems.Core.ProgressData.ToString" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.Value" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.ProgressData">
      <topicdata name="ProgressData" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.ProgressData" />
      <apidata name="ProgressData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.ProgressData.ChangeValue(System.Int32)" />
        <element api="Overload:Mentula.GuiItems.Core.ProgressData.Equals">
          <element api="M:Mentula.GuiItems.Core.ProgressData.Equals(System.Object)" />
          <element api="M:Mentula.GuiItems.Core.ProgressData.Equals(Mentula.GuiItems.Core.ProgressData)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.ProgressData.GetHashCode" />
        <element api="M:Mentula.GuiItems.Core.ProgressData.ToString" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" />
      </containers>
    </api>
    <api id="Operators.T:Mentula.GuiItems.Core.ProgressData">
      <topicdata name="ProgressData" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Mentula.GuiItems.Core.ProgressData" />
      <apidata name="ProgressData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.ProgressData.op_Equality(Mentula.GuiItems.Core.ProgressData,Mentula.GuiItems.Core.ProgressData)" />
        <element api="M:Mentula.GuiItems.Core.ProgressData.op_Inequality(Mentula.GuiItems.Core.ProgressData,Mentula.GuiItems.Core.ProgressData)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.ProgressData">
      <topicdata name="ProgressData" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.ProgressData" />
      <apidata name="ProgressData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.ProgressData.DefaultMaximum" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.DefaultMinimum" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.Maximum" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.Minimum" />
        <element api="P:Mentula.GuiItems.Core.ProgressData.Value" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.ProgressData.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32)" />
        <element api="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32,System.Int32)" />
        <element api="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.ProgressData.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.ProgressData.Equals(System.Object)" />
        <element api="M:Mentula.GuiItems.Core.ProgressData.Equals(Mentula.GuiItems.Core.ProgressData)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.ProgressData.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.ProgressData.#ctor" />
      <parameters>
        <parameter name="minimum">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximum">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.#ctor(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.ProgressData.#ctor" />
      <parameters>
        <parameter name="minimum">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximum">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.ChangeValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="ChangeValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="percent">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.ProgressData.DefaultMaximum">
      <topicdata group="api" />
      <apidata name="DefaultMaximum" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultMaximum" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.ProgressData.DefaultMinimum">
      <topicdata group="api" />
      <apidata name="DefaultMinimum" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultMinimum" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.Equals(Mentula.GuiItems.Core.ProgressData)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.ProgressData.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.ProgressData.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.ProgressData.Maximum">
      <topicdata group="api" />
      <apidata name="Maximum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Maximum" />
      <setter name="set_Maximum" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.ProgressData.Minimum">
      <topicdata group="api" />
      <apidata name="Minimum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Minimum" />
      <setter name="set_Minimum" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.op_Equality(Mentula.GuiItems.Core.ProgressData,Mentula.GuiItems.Core.ProgressData)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pgd1">
          <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
        </parameter>
        <parameter name="pgd2">
          <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.op_Inequality(Mentula.GuiItems.Core.ProgressData,Mentula.GuiItems.Core.ProgressData)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pgd1">
          <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
        </parameter>
        <parameter name="pgd2">
          <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ProgressData.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.ProgressData.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.ResizeMode">
      <topicdata group="api" />
      <apidata name="ResizeMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Mentula.GuiItems.Core.ResizeMode.Normal" />
        <element api="F:Mentula.GuiItems.Core.ResizeMode.AutoSize" />
        <element api="F:Mentula.GuiItems.Core.ResizeMode.CenterImage" />
        <element api="F:Mentula.GuiItems.Core.ResizeMode.StretchImage" />
        <element api="F:Mentula.GuiItems.Core.ResizeMode.Zoom" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.ResizeMode.AutoSize">
      <topicdata group="api" notopic="" />
      <apidata name="AutoSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.ResizeMode.CenterImage">
      <topicdata group="api" notopic="" />
      <apidata name="CenterImage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.ResizeMode.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.ResizeMode.StretchImage">
      <topicdata group="api" notopic="" />
      <apidata name="StretchImage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.ResizeMode.Zoom">
      <topicdata group="api" notopic="" />
      <apidata name="Zoom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.Size">
      <topicdata group="api" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.Size.#ctor">
          <element api="M:Mentula.GuiItems.Core.Size.#ctor(Microsoft.Xna.Framework.Vector2)" />
          <element api="M:Mentula.GuiItems.Core.Size.#ctor(System.Int32)" />
          <element api="M:Mentula.GuiItems.Core.Size.#ctor(System.Int32,System.Int32)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.Add(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="Overload:Mentula.GuiItems.Core.Size.Divide">
          <element api="M:Mentula.GuiItems.Core.Size.Divide(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
          <element api="M:Mentula.GuiItems.Core.Size.Divide(Mentula.GuiItems.Core.Size,System.Int32)" />
        </element>
        <element api="F:Mentula.GuiItems.Core.Size.Empty" />
        <element api="Overload:Mentula.GuiItems.Core.Size.Equals">
          <element api="M:Mentula.GuiItems.Core.Size.Equals(System.Object)" />
          <element api="M:Mentula.GuiItems.Core.Size.Equals(Mentula.GuiItems.Core.Size)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.GetHashCode" />
        <element api="P:Mentula.GuiItems.Core.Size.Height" />
        <element api="P:Mentula.GuiItems.Core.Size.IsEmpty" />
        <element api="Overload:Mentula.GuiItems.Core.Size.Multiply">
          <element api="M:Mentula.GuiItems.Core.Size.Multiply(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
          <element api="M:Mentula.GuiItems.Core.Size.Multiply(Mentula.GuiItems.Core.Size,System.Int32)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.op_Addition(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="Overload:Mentula.GuiItems.Core.Size.op_Division">
          <element api="M:Mentula.GuiItems.Core.Size.op_Division(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
          <element api="M:Mentula.GuiItems.Core.Size.op_Division(Mentula.GuiItems.Core.Size,System.Int32)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.op_Equality(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.op_Inequality(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.op_LeftShift(Mentula.GuiItems.Core.Size,System.Int32)" />
        <element api="Overload:Mentula.GuiItems.Core.Size.op_Multiply">
          <element api="M:Mentula.GuiItems.Core.Size.op_Multiply(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
          <element api="M:Mentula.GuiItems.Core.Size.op_Multiply(Mentula.GuiItems.Core.Size,System.Int32)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.op_RightShift(Mentula.GuiItems.Core.Size,System.Int32)" />
        <element api="M:Mentula.GuiItems.Core.Size.op_Subtraction(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.Subtract(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.ToString" />
        <element api="M:Mentula.GuiItems.Core.Size.ToVector2" />
        <element api="P:Mentula.GuiItems.Core.Size.Width" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.Size">
      <topicdata name="Size" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.Add(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="Overload:Mentula.GuiItems.Core.Size.Divide">
          <element api="M:Mentula.GuiItems.Core.Size.Divide(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
          <element api="M:Mentula.GuiItems.Core.Size.Divide(Mentula.GuiItems.Core.Size,System.Int32)" />
        </element>
        <element api="Overload:Mentula.GuiItems.Core.Size.Equals">
          <element api="M:Mentula.GuiItems.Core.Size.Equals(System.Object)" />
          <element api="M:Mentula.GuiItems.Core.Size.Equals(Mentula.GuiItems.Core.Size)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.GetHashCode" />
        <element api="Overload:Mentula.GuiItems.Core.Size.Multiply">
          <element api="M:Mentula.GuiItems.Core.Size.Multiply(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
          <element api="M:Mentula.GuiItems.Core.Size.Multiply(Mentula.GuiItems.Core.Size,System.Int32)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.Subtract(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.ToString" />
        <element api="M:Mentula.GuiItems.Core.Size.ToVector2" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" />
      </containers>
    </api>
    <api id="Operators.T:Mentula.GuiItems.Core.Size">
      <topicdata name="Size" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Mentula.GuiItems.Core.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Size.op_Addition(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="Overload:Mentula.GuiItems.Core.Size.op_Division">
          <element api="M:Mentula.GuiItems.Core.Size.op_Division(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
          <element api="M:Mentula.GuiItems.Core.Size.op_Division(Mentula.GuiItems.Core.Size,System.Int32)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.op_Equality(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.op_Inequality(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.op_LeftShift(Mentula.GuiItems.Core.Size,System.Int32)" />
        <element api="Overload:Mentula.GuiItems.Core.Size.op_Multiply">
          <element api="M:Mentula.GuiItems.Core.Size.op_Multiply(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
          <element api="M:Mentula.GuiItems.Core.Size.op_Multiply(Mentula.GuiItems.Core.Size,System.Int32)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Size.op_RightShift(Mentula.GuiItems.Core.Size,System.Int32)" />
        <element api="M:Mentula.GuiItems.Core.Size.op_Subtraction(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.Size">
      <topicdata name="Size" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.Size.Height" />
        <element api="P:Mentula.GuiItems.Core.Size.IsEmpty" />
        <element api="P:Mentula.GuiItems.Core.Size.Width" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Core.Size">
      <topicdata name="Size" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Core.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.Size.Empty" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Size.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Size.#ctor(Microsoft.Xna.Framework.Vector2)" />
        <element api="M:Mentula.GuiItems.Core.Size.#ctor(System.Int32)" />
        <element api="M:Mentula.GuiItems.Core.Size.#ctor(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Size.Divide">
      <topicdata name="Divide" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Divide" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Size.Divide(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.Divide(Mentula.GuiItems.Core.Size,System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Size.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Size.Equals(System.Object)" />
        <element api="M:Mentula.GuiItems.Core.Size.Equals(Mentula.GuiItems.Core.Size)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Size.Multiply">
      <topicdata name="Multiply" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Size.Multiply(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.Multiply(Mentula.GuiItems.Core.Size,System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Size.op_Division">
      <topicdata name="Division" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Size.op_Division(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.op_Division(Mentula.GuiItems.Core.Size,System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Size.op_Multiply">
      <topicdata name="Multiply" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Size.op_Multiply(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)" />
        <element api="M:Mentula.GuiItems.Core.Size.op_Multiply(Mentula.GuiItems.Core.Size,System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.#ctor(Microsoft.Xna.Framework.Vector2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.Size.#ctor" />
      <parameters>
        <parameter name="vect">
          <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.Size.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.#ctor(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Core.Size.#ctor" />
      <parameters>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.Add(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="size2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.Divide(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Divide" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Mentula.GuiItems.Core.Size.Divide" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="size2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.Divide(Mentula.GuiItems.Core.Size,System.Int32)">
      <topicdata group="api" />
      <apidata name="Divide" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Mentula.GuiItems.Core.Size.Divide" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Size.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.Equals(Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.Size.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="size">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.Size.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Size.Height">
      <topicdata group="api" />
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Height" />
      <setter name="set_Height" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Size.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.Multiply(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Mentula.GuiItems.Core.Size.Multiply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="size2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.Multiply(Mentula.GuiItems.Core.Size,System.Int32)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Mentula.GuiItems.Core.Size.Multiply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_Addition(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="sz2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_Division(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Mentula.GuiItems.Core.Size.op_Division" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="sz2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_Division(Mentula.GuiItems.Core.Size,System.Int32)">
      <topicdata group="api" />
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Mentula.GuiItems.Core.Size.op_Division" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="v">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_Equality(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="sz2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_Inequality(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="sz2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_LeftShift(Mentula.GuiItems.Core.Size,System.Int32)">
      <topicdata group="api" />
      <apidata name="LeftShift" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="v">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_Multiply(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Mentula.GuiItems.Core.Size.op_Multiply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="sz2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_Multiply(Mentula.GuiItems.Core.Size,System.Int32)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Mentula.GuiItems.Core.Size.op_Multiply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="v">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_RightShift(Mentula.GuiItems.Core.Size,System.Int32)">
      <topicdata group="api" />
      <apidata name="RightShift" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="v">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.op_Subtraction(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sz1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="sz2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.Subtract(Mentula.GuiItems.Core.Size,Mentula.GuiItems.Core.Size)">
      <topicdata group="api" />
      <apidata name="Subtract" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size1">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
        <parameter name="size2">
          <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Size.ToVector2">
      <topicdata group="api" />
      <apidata name="ToVector2" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Size.Width">
      <topicdata group="api" />
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Width" />
      <setter name="set_Width" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1">
      <topicdata group="api" />
      <apidata name="ValueChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TVal" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.ValueChangedEventArgs`1.#ctor(`0,`0)" />
        <element api="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.Empty" />
        <element api="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.NewValue" />
        <element api="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.OldValue" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.ValueChangedEventArgs`1">
      <topicdata name="ValueChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
      <apidata name="ValueChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TVal" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Core.ValueChangedEventArgs`1">
      <topicdata name="ValueChangedEventArgs" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
      <apidata name="ValueChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TVal" />
      </templates>
      <elements>
        <element api="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.Empty" />
        <element api="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.NewValue" />
        <element api="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.OldValue" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.ValueChangedEventArgs`1.#ctor(`0,`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="oldVal">
          <template name="TVal" index="0" api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
        </parameter>
        <parameter name="newVal">
          <template name="TVal" index="0" api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
          <specialization>
            <template name="TVal" index="0" api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.NewValue">
      <topicdata group="api" />
      <apidata name="NewValue" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <template name="TVal" index="0" api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.ValueChangedEventArgs`1.OldValue">
      <topicdata group="api" />
      <apidata name="OldValue" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <template name="TVal" index="0" api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1">
      <topicdata group="api" />
      <apidata name="ValueChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core" />
      </containers>
    </api>
    <api id="N:Mentula.GuiItems.Core.Handlers">
      <topicdata group="api" />
      <apidata name="Mentula.GuiItems.Core.Handlers" group="namespace" />
      <elements>
        <element api="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler" />
        <element api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" />
        <element api="T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler" />
        <element api="T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler" />
        <element api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" />
      </elements>
    </api>
    <api id="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler">
      <topicdata group="api" />
      <apidata name="ButtonTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="P:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler.Click" />
        <element api="P:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler.Hover" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background" />
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler">
      <topicdata name="ButtonTextureHandler" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler" />
      <apidata name="ButtonTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler">
      <topicdata name="ButtonTextureHandler" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler" />
      <apidata name="ButtonTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler.Click" />
        <element api="P:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler.Hover" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler.Click">
      <topicdata group="api" />
      <apidata name="Click" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Click" />
      <setter name="set_Click" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler.Hover">
      <topicdata group="api" />
      <apidata name="Hover" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Hover" />
      <setter name="set_Hover" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.Handlers.ByteFlags">
      <topicdata group="api" />
      <apidata name="ByteFlags" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals">
          <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals(System.Object)" />
          <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals(Mentula.GuiItems.Core.Handlers.ByteFlags)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.GetHashCode" />
        <element api="P:Mentula.GuiItems.Core.Handlers.ByteFlags.Item(System.Int32)" />
        <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.ToString" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.Handlers.ByteFlags">
      <topicdata name="ByteFlags" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.Handlers.ByteFlags" />
      <apidata name="ByteFlags" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals">
          <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals(System.Object)" />
          <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals(Mentula.GuiItems.Core.Handlers.ByteFlags)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.GetHashCode" />
        <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.ToString" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.Handlers.ByteFlags">
      <topicdata name="ByteFlags" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.Handlers.ByteFlags" />
      <apidata name="ByteFlags" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.Handlers.ByteFlags.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals(System.Object)" />
        <element api="M:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals(Mentula.GuiItems.Core.Handlers.ByteFlags)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals(Mentula.GuiItems.Core.Handlers.ByteFlags)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.Handlers.ByteFlags.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Handlers.ByteFlags.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Handlers.ByteFlags.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Handlers.ByteFlags.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler">
      <topicdata group="api" />
      <apidata name="LabelTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.Handlers.LabelTextureHandler.#ctor" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background" />
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler">
      <topicdata name="LabelTextureHandler" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler" />
      <apidata name="LabelTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler">
      <topicdata name="LabelTextureHandler" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler" />
      <apidata name="LabelTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Handlers.LabelTextureHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler">
      <topicdata group="api" />
      <apidata name="TextboxTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="P:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler.Focused" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background" />
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler">
      <topicdata name="TextboxTextureHandler" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler" />
      <apidata name="TextboxTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler">
      <topicdata name="TextboxTextureHandler" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler" />
      <apidata name="TextboxTextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler.Focused" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler.Focused">
      <topicdata group="api" />
      <apidata name="Focused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Focused" />
      <setter name="set_Focused" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Core.Handlers.TextureHandler">
      <topicdata group="api" />
      <apidata name="TextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Mentula.GuiItems.Core.Handlers.ButtonTextureHandler" ref="true" />
          <type api="T:Mentula.GuiItems.Core.Handlers.LabelTextureHandler" ref="true" />
          <type api="T:Mentula.GuiItems.Core.Handlers.TextboxTextureHandler" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background" />
        <element api="Overload:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose">
          <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
          <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Finalize" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.Handlers.TextureHandler.userSet" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.Handlers.TextureHandler">
      <topicdata name="TextureHandler" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.Handlers.TextureHandler" />
      <apidata name="TextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose">
          <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
          <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Finalize" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Core.Handlers.TextureHandler">
      <topicdata name="TextureHandler" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Core.Handlers.TextureHandler" />
      <apidata name="TextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground" />
        <element api="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Core.Handlers.TextureHandler">
      <topicdata name="TextureHandler" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Core.Handlers.TextureHandler" />
      <apidata name="TextureHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.Handlers.TextureHandler.userSet" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
        <element api="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Background">
      <topicdata group="api" />
      <apidata name="Background" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Background" />
      <setter name="set_Background" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Mentula.GuiItems.Core.Handlers.TextureHandler.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Handlers.TextureHandler.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Handlers.TextureHandler.Foreground">
      <topicdata group="api" />
      <apidata name="Foreground" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Foreground" />
      <setter name="set_Foreground" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Core.Handlers.TextureHandler.IsDisposed">
      <topicdata group="api" />
      <apidata name="IsDisposed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDisposed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Core.Handlers.TextureHandler.userSet">
      <topicdata group="api" />
      <apidata name="userSet" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Handlers.ByteFlags" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Handlers" />
        <type api="T:Mentula.GuiItems.Core.Handlers.TextureHandler" ref="true" />
      </containers>
    </api>
    <api id="N:Mentula.GuiItems.Core.Interfaces">
      <topicdata group="api" />
      <apidata name="Mentula.GuiItems.Core.Interfaces" group="namespace" />
      <elements>
        <element api="T:Mentula.GuiItems.Core.Interfaces.IToggleable" />
      </elements>
    </api>
    <api id="T:Mentula.GuiItems.Core.Interfaces.IToggleable">
      <topicdata group="api" />
      <apidata name="IToggleable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
      </implementors>
      <elements>
        <element api="M:Mentula.GuiItems.Core.Interfaces.IToggleable.Hide" />
        <element api="M:Mentula.GuiItems.Core.Interfaces.IToggleable.Show" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Interfaces" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Core.Interfaces.IToggleable">
      <topicdata name="IToggleable" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Core.Interfaces.IToggleable" />
      <apidata name="IToggleable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.Interfaces.IToggleable.Hide" />
        <element api="M:Mentula.GuiItems.Core.Interfaces.IToggleable.Show" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Interfaces" />
        <type api="T:Mentula.GuiItems.Core.Interfaces.IToggleable" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Interfaces.IToggleable.Hide">
      <topicdata group="api" />
      <apidata name="Hide" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Interfaces" />
        <type api="T:Mentula.GuiItems.Core.Interfaces.IToggleable" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Core.Interfaces.IToggleable.Show">
      <topicdata group="api" />
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Core.Interfaces" />
        <type api="T:Mentula.GuiItems.Core.Interfaces.IToggleable" ref="true" />
      </containers>
    </api>
    <api id="N:Mentula.GuiItems.Items">
      <topicdata group="api" />
      <apidata name="Mentula.GuiItems.Items" group="namespace" />
      <elements>
        <element api="T:Mentula.GuiItems.Items.Button" />
        <element api="T:Mentula.GuiItems.Items.DropDown" />
        <element api="T:Mentula.GuiItems.Items.FpsCounter" />
        <element api="T:Mentula.GuiItems.Items.Label" />
        <element api="T:Mentula.GuiItems.Items.ProgressBar" />
        <element api="T:Mentula.GuiItems.Items.Slider" />
        <element api="T:Mentula.GuiItems.Items.TextBox" />
        <element api="T:Mentula.GuiItems.Items.PictureBox" />
      </elements>
    </api>
    <api id="T:Mentula.GuiItems.Items.Button">
      <topicdata group="api" />
      <apidata name="Button" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="Overload:Mentula.GuiItems.Items.Button.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="Overload:Mentula.GuiItems.Items.Button.PerformClick">
          <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
          <element api="M:Mentula.GuiItems.Items.Button.PerformClick(Mentula.GuiItems.Core.MouseClick)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.Button.#ctor">
          <element api="M:Mentula.GuiItems.Items.Button.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
          <element api="M:Mentula.GuiItems.Items.Button.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        </element>
        <element api="E:Mentula.GuiItems.Items.Button.DoubleClick" />
        <element api="M:Mentula.GuiItems.Items.Button.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="E:Mentula.GuiItems.Items.Button.LeftClick" />
        <element api="M:Mentula.GuiItems.Items.Button.Refresh" />
        <element api="E:Mentula.GuiItems.Items.Button.RightClick" />
        <element api="Overload:Mentula.GuiItems.Items.Button.Update">
          <element api="M:Mentula.GuiItems.Items.Button.Update(Microsoft.Xna.Framework.Input.MouseState)" />
          <element api="M:Mentula.GuiItems.Items.Button.Update(Microsoft.Xna.Framework.Input.MouseState,System.Single)" />
        </element>
        <element api="P:Mentula.GuiItems.Items.Label.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Label.Bounds" />
        <element api="F:Mentula.GuiItems.Items.Label.font" />
        <element api="P:Mentula.GuiItems.Items.Label.Font" />
        <element api="E:Mentula.GuiItems.Items.Label.FontChanged" />
        <element api="F:Mentula.GuiItems.Items.Label.foregroundRectangle" />
        <element api="P:Mentula.GuiItems.Items.Label.ForegroundRectangle" />
        <element api="M:Mentula.GuiItems.Items.Label.GetLineCount" />
        <element api="M:Mentula.GuiItems.Items.Label.HandleAutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.LineStart" />
        <element api="M:Mentula.GuiItems.Items.Label.OnFontChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.SpriteFont})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="P:Mentula.GuiItems.Items.Label.Text" />
        <element api="E:Mentula.GuiItems.Items.Label.TextChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Items.Button">
      <topicdata name="Button" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Items.Button" />
      <apidata name="Button" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Mentula.GuiItems.Items.Button.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="Overload:Mentula.GuiItems.Items.Button.PerformClick">
          <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
          <element api="M:Mentula.GuiItems.Items.Button.PerformClick(Mentula.GuiItems.Core.MouseClick)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Items.Button.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Items.Button.Refresh" />
        <element api="Overload:Mentula.GuiItems.Items.Button.Update">
          <element api="M:Mentula.GuiItems.Items.Button.Update(Microsoft.Xna.Framework.Input.MouseState)" />
          <element api="M:Mentula.GuiItems.Items.Button.Update(Microsoft.Xna.Framework.Input.MouseState,System.Single)" />
        </element>
        <element api="M:Mentula.GuiItems.Items.Label.GetLineCount" />
        <element api="M:Mentula.GuiItems.Items.Label.HandleAutoSize" />
        <element api="M:Mentula.GuiItems.Items.Label.OnFontChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.SpriteFont})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Items.Button">
      <topicdata name="Button" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Items.Button" />
      <apidata name="Button" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.Label.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Label.Bounds" />
        <element api="P:Mentula.GuiItems.Items.Label.Font" />
        <element api="P:Mentula.GuiItems.Items.Label.ForegroundRectangle" />
        <element api="P:Mentula.GuiItems.Items.Label.LineStart" />
        <element api="P:Mentula.GuiItems.Items.Label.Text" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Items.Button">
      <topicdata name="Button" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Items.Button" />
      <apidata name="Button" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="E:Mentula.GuiItems.Items.Button.DoubleClick" />
        <element api="E:Mentula.GuiItems.Items.Button.LeftClick" />
        <element api="E:Mentula.GuiItems.Items.Button.RightClick" />
        <element api="E:Mentula.GuiItems.Items.Label.FontChanged" />
        <element api="E:Mentula.GuiItems.Items.Label.TextChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Items.Button">
      <topicdata name="Button" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Items.Button" />
      <apidata name="Button" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="F:Mentula.GuiItems.Items.Label.font" />
        <element api="F:Mentula.GuiItems.Items.Label.foregroundRectangle" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.Button.PerformClick">
      <topicdata name="PerformClick" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="PerformClick" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Items.Button.PerformClick(Mentula.GuiItems.Core.MouseClick)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.Button.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.Button.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Items.Button.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.Button.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.Button.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Items.Button.Update(Microsoft.Xna.Framework.Input.MouseState,System.Single)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Button.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.Button.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Button.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.Button.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="bounds">
          <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.Button.DoubleClick">
      <topicdata group="api" />
      <apidata name="DoubleClick" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DoubleClick" />
      <remover name="remove_DoubleClick" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.MouseEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Button.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
      <topicdata group="api" />
      <apidata name="Draw" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="spriteBatch">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.Button.LeftClick">
      <topicdata group="api" />
      <apidata name="LeftClick" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LeftClick" />
      <remover name="remove_LeftClick" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.MouseEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Button.PerformClick(Mentula.GuiItems.Core.MouseClick)">
      <topicdata group="api" />
      <apidata name="PerformClick" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.Button.PerformClick" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="button" optional="true">
          <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
          <argument>
            <type api="T:Mentula.GuiItems.Core.MouseClick" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Button.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Items.Label.Refresh">
          <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.Button.RightClick">
      <topicdata group="api" />
      <apidata name="RightClick" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RightClick" />
      <remover name="remove_RightClick" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.MouseEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Button.Update(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.Button.Update" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mState">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Use Update(MouseState, float) instead</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Mentula.GuiItems.Items.Button.Update(Microsoft.Xna.Framework.Input.MouseState,System.Single)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.Button.Update" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="state">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
        <parameter name="deltaTime">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Items.DropDown">
      <topicdata group="api" />
      <apidata name="DropDown" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="Overload:Mentula.GuiItems.Items.DropDown.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.DropDown.#ctor">
          <element api="M:Mentula.GuiItems.Items.DropDown.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
          <element api="M:Mentula.GuiItems.Items.DropDown.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        </element>
        <element api="Overload:Mentula.GuiItems.Items.DropDown.AddOption">
          <element api="M:Mentula.GuiItems.Items.DropDown.AddOption(System.String[])" />
          <element api="M:Mentula.GuiItems.Items.DropDown.AddOption(Mentula.GuiItems.Core.Pair[])" />
        </element>
        <element api="P:Mentula.GuiItems.Items.DropDown.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.DropDown.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.DropDown.DefaultBackColor" />
        <element api="P:Mentula.GuiItems.Items.DropDown.DefaultForeColor" />
        <element api="P:Mentula.GuiItems.Items.DropDown.DefaultHeaderBackColor" />
        <element api="P:Mentula.GuiItems.Items.DropDown.DefaultHeaderText" />
        <element api="M:Mentula.GuiItems.Items.DropDown.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="F:Mentula.GuiItems.Items.DropDown.font" />
        <element api="F:Mentula.GuiItems.Items.DropDown.foregroundRectangle" />
        <element api="P:Mentula.GuiItems.Items.DropDown.HeaderBackgroundColor" />
        <element api="P:Mentula.GuiItems.Items.DropDown.HeaderText" />
        <element api="E:Mentula.GuiItems.Items.DropDown.IndexClick" />
        <element api="F:Mentula.GuiItems.Items.DropDown.labels" />
        <element api="M:Mentula.GuiItems.Items.DropDown.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Items.DropDown.Refresh" />
        <element api="M:Mentula.GuiItems.Items.DropDown.Update(Microsoft.Xna.Framework.Input.MouseState)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Items.DropDown">
      <topicdata name="DropDown" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Items.DropDown" />
      <apidata name="DropDown" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Mentula.GuiItems.Items.DropDown.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.DropDown.AddOption">
          <element api="M:Mentula.GuiItems.Items.DropDown.AddOption(System.String[])" />
          <element api="M:Mentula.GuiItems.Items.DropDown.AddOption(Mentula.GuiItems.Core.Pair[])" />
        </element>
        <element api="M:Mentula.GuiItems.Items.DropDown.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Items.DropDown.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Items.DropDown.Refresh" />
        <element api="M:Mentula.GuiItems.Items.DropDown.Update(Microsoft.Xna.Framework.Input.MouseState)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Items.DropDown">
      <topicdata name="DropDown" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Items.DropDown" />
      <apidata name="DropDown" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.DropDown.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.DropDown.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.DropDown.DefaultBackColor" />
        <element api="P:Mentula.GuiItems.Items.DropDown.DefaultForeColor" />
        <element api="P:Mentula.GuiItems.Items.DropDown.DefaultHeaderBackColor" />
        <element api="P:Mentula.GuiItems.Items.DropDown.DefaultHeaderText" />
        <element api="P:Mentula.GuiItems.Items.DropDown.HeaderBackgroundColor" />
        <element api="P:Mentula.GuiItems.Items.DropDown.HeaderText" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Items.DropDown">
      <topicdata name="DropDown" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Items.DropDown" />
      <apidata name="DropDown" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="E:Mentula.GuiItems.Items.DropDown.IndexClick" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Items.DropDown">
      <topicdata name="DropDown" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Items.DropDown" />
      <apidata name="DropDown" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="F:Mentula.GuiItems.Items.DropDown.font" />
        <element api="F:Mentula.GuiItems.Items.DropDown.foregroundRectangle" />
        <element api="F:Mentula.GuiItems.Items.DropDown.labels" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.DropDown.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.DropDown.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Items.DropDown.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.DropDown.AddOption">
      <topicdata name="AddOption" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AddOption" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.DropDown.AddOption(System.String[])" />
        <element api="M:Mentula.GuiItems.Items.DropDown.AddOption(Mentula.GuiItems.Core.Pair[])" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.DropDown.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.DropDown.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.DropDown.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.DropDown.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="bounds">
          <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.DropDown.AddOption(Mentula.GuiItems.Core.Pair[])">
      <topicdata group="api" />
      <apidata name="AddOption" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.DropDown.AddOption" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parts" params="true">
          <arrayOf rank="1">
            <type api="T:Mentula.GuiItems.Core.Pair" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.DropDown.AddOption(System.String[])">
      <topicdata group="api" />
      <apidata name="AddOption" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.DropDown.AddOption" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parts" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.DropDown.AutoSize">
      <topicdata group="api" />
      <apidata name="AutoSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoSize" />
      <setter name="set_AutoSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.DropDown.BorderStyle">
      <topicdata group="api" />
      <apidata name="BorderStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BorderStyle" />
      <setter name="set_BorderStyle" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.DropDown.DefaultBackColor">
      <topicdata group="api" />
      <apidata name="DefaultBackColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultBackColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.DropDown.DefaultForeColor">
      <topicdata group="api" />
      <apidata name="DefaultForeColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultForeColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.DropDown.DefaultHeaderBackColor">
      <topicdata group="api" />
      <apidata name="DefaultHeaderBackColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultHeaderBackColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.DropDown.DefaultHeaderText">
      <topicdata group="api" />
      <apidata name="DefaultHeaderText" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultHeaderText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.DropDown.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
      <topicdata group="api" />
      <apidata name="Draw" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="spriteBatch">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Items.DropDown.font">
      <topicdata group="api" />
      <apidata name="font" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Items.DropDown.foregroundRectangle">
      <topicdata group="api" />
      <apidata name="foregroundRectangle" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.DropDown.HeaderBackgroundColor">
      <topicdata group="api" />
      <apidata name="HeaderBackgroundColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_HeaderBackgroundColor" />
      <setter name="set_HeaderBackgroundColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.DropDown.HeaderText">
      <topicdata group="api" />
      <apidata name="HeaderText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_HeaderText" />
      <setter name="set_HeaderText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.DropDown.IndexClick">
      <topicdata group="api" />
      <apidata name="IndexClick" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_IndexClick" />
      <remover name="remove_IndexClick" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.IndexedClickEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Items.DropDown.labels">
      <topicdata group="api" />
      <apidata name="labels" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
              </specialization>
            </type>
          </arrayOf>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.DropDown.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})">
      <topicdata group="api" />
      <apidata name="OnMove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.DropDown.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Refresh">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.DropDown.Update(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="state">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.DropDown" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Items.FpsCounter">
      <topicdata group="api" />
      <apidata name="FpsCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Items.FpsCounter.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="P:Mentula.GuiItems.Items.FpsCounter.Average" />
        <element api="P:Mentula.GuiItems.Items.FpsCounter.BufferSize" />
        <element api="P:Mentula.GuiItems.Items.FpsCounter.Current" />
        <element api="Overload:Mentula.GuiItems.Items.FpsCounter.Update">
          <element api="M:Mentula.GuiItems.Items.FpsCounter.Update(Microsoft.Xna.Framework.Input.MouseState)" />
          <element api="M:Mentula.GuiItems.Items.FpsCounter.Update(Microsoft.Xna.Framework.Input.MouseState,System.Single)" />
        </element>
        <element api="P:Mentula.GuiItems.Items.Label.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Label.Bounds" />
        <element api="P:Mentula.GuiItems.Items.Label.Font" />
        <element api="E:Mentula.GuiItems.Items.Label.FontChanged" />
        <element api="P:Mentula.GuiItems.Items.Label.ForegroundRectangle" />
        <element api="M:Mentula.GuiItems.Items.Label.GetLineCount" />
        <element api="P:Mentula.GuiItems.Items.Label.LineStart" />
        <element api="M:Mentula.GuiItems.Items.Label.Refresh" />
        <element api="P:Mentula.GuiItems.Items.Label.Text" />
        <element api="E:Mentula.GuiItems.Items.Label.TextChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Items.FpsCounter">
      <topicdata name="FpsCounter" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Items.FpsCounter" />
      <apidata name="FpsCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.FpsCounter.Update">
          <element api="M:Mentula.GuiItems.Items.FpsCounter.Update(Microsoft.Xna.Framework.Input.MouseState)" />
          <element api="M:Mentula.GuiItems.Items.FpsCounter.Update(Microsoft.Xna.Framework.Input.MouseState,System.Single)" />
        </element>
        <element api="M:Mentula.GuiItems.Items.Label.GetLineCount" />
        <element api="M:Mentula.GuiItems.Items.Label.Refresh" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Items.FpsCounter">
      <topicdata name="FpsCounter" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Items.FpsCounter" />
      <apidata name="FpsCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.FpsCounter.Average" />
        <element api="P:Mentula.GuiItems.Items.FpsCounter.BufferSize" />
        <element api="P:Mentula.GuiItems.Items.FpsCounter.Current" />
        <element api="P:Mentula.GuiItems.Items.Label.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Label.Bounds" />
        <element api="P:Mentula.GuiItems.Items.Label.Font" />
        <element api="P:Mentula.GuiItems.Items.Label.ForegroundRectangle" />
        <element api="P:Mentula.GuiItems.Items.Label.LineStart" />
        <element api="P:Mentula.GuiItems.Items.Label.Text" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Items.FpsCounter">
      <topicdata name="FpsCounter" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Items.FpsCounter" />
      <apidata name="FpsCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="E:Mentula.GuiItems.Items.Label.FontChanged" />
        <element api="E:Mentula.GuiItems.Items.Label.TextChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.FpsCounter.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.FpsCounter.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Items.FpsCounter.Update(Microsoft.Xna.Framework.Input.MouseState,System.Single)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.FpsCounter.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.FpsCounter.Average">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Average" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.FpsCounter.BufferSize">
      <topicdata group="api" />
      <apidata name="BufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BufferSize" />
      <setter name="set_BufferSize" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.FpsCounter.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.FpsCounter.Update(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.FpsCounter.Update" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="mState">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Use Update(MouseState, float) instead!</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Mentula.GuiItems.Items.FpsCounter.Update(Microsoft.Xna.Framework.Input.MouseState,System.Single)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.FpsCounter.Update" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mState">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
        <parameter name="deltaTime">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Items.Label">
      <topicdata group="api" />
      <apidata name="Label" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Mentula.GuiItems.Items.Button" ref="true" />
          <type api="T:Mentula.GuiItems.Items.FpsCounter" ref="true" />
          <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="Overload:Mentula.GuiItems.Items.Label.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.Label.#ctor">
          <element api="M:Mentula.GuiItems.Items.Label.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
          <element api="M:Mentula.GuiItems.Items.Label.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        </element>
        <element api="P:Mentula.GuiItems.Items.Label.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Label.Bounds" />
        <element api="F:Mentula.GuiItems.Items.Label.font" />
        <element api="P:Mentula.GuiItems.Items.Label.Font" />
        <element api="E:Mentula.GuiItems.Items.Label.FontChanged" />
        <element api="F:Mentula.GuiItems.Items.Label.foregroundRectangle" />
        <element api="P:Mentula.GuiItems.Items.Label.ForegroundRectangle" />
        <element api="M:Mentula.GuiItems.Items.Label.GetLineCount" />
        <element api="M:Mentula.GuiItems.Items.Label.HandleAutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.LineStart" />
        <element api="M:Mentula.GuiItems.Items.Label.OnFontChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.SpriteFont})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Items.Label.Refresh" />
        <element api="P:Mentula.GuiItems.Items.Label.Text" />
        <element api="E:Mentula.GuiItems.Items.Label.TextChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Items.Label">
      <topicdata name="Label" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Items.Label" />
      <apidata name="Label" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Mentula.GuiItems.Items.Label.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Items.Label.GetLineCount" />
        <element api="M:Mentula.GuiItems.Items.Label.HandleAutoSize" />
        <element api="M:Mentula.GuiItems.Items.Label.OnFontChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.SpriteFont})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Items.Label.Refresh" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Items.Label">
      <topicdata name="Label" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Items.Label" />
      <apidata name="Label" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.Label.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Label.Bounds" />
        <element api="P:Mentula.GuiItems.Items.Label.Font" />
        <element api="P:Mentula.GuiItems.Items.Label.ForegroundRectangle" />
        <element api="P:Mentula.GuiItems.Items.Label.LineStart" />
        <element api="P:Mentula.GuiItems.Items.Label.Text" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Items.Label">
      <topicdata name="Label" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Items.Label" />
      <apidata name="Label" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="E:Mentula.GuiItems.Items.Label.FontChanged" />
        <element api="E:Mentula.GuiItems.Items.Label.TextChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Items.Label">
      <topicdata name="Label" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Items.Label" />
      <apidata name="Label" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="F:Mentula.GuiItems.Items.Label.font" />
        <element api="F:Mentula.GuiItems.Items.Label.foregroundRectangle" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.Label.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.Label.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Items.Label.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.Label.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.Label.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="bounds">
          <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Label.AutoSize">
      <topicdata group="api" />
      <apidata name="AutoSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoSize" />
      <setter name="set_AutoSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Label.BorderStyle">
      <topicdata group="api" />
      <apidata name="BorderStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BorderStyle" />
      <setter name="set_BorderStyle" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Label.Bounds">
      <topicdata group="api" />
      <apidata name="Bounds" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Mentula.GuiItems.Core.GuiItem.Bounds">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Bounds" />
      <setter name="set_Bounds" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Items.Label.font">
      <topicdata group="api" />
      <apidata name="font" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Label.Font">
      <topicdata group="api" />
      <apidata name="Font" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Font" />
      <setter name="set_Font" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.Label.FontChanged">
      <topicdata group="api" />
      <apidata name="FontChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_FontChanged" />
      <remover name="remove_FontChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Items.Label.foregroundRectangle">
      <topicdata group="api" />
      <apidata name="foregroundRectangle" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Label.ForegroundRectangle">
      <topicdata group="api" />
      <apidata name="ForegroundRectangle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ForegroundRectangle" />
      <setter name="set_ForegroundRectangle" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.GetLineCount">
      <topicdata group="api" />
      <apidata name="GetLineCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.HandleAutoSize">
      <topicdata group="api" />
      <apidata name="HandleAutoSize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Label.LineStart">
      <topicdata group="api" />
      <apidata name="LineStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LineStart" />
      <setter name="set_LineStart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.OnFontChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.SpriteFont})">
      <topicdata group="api" />
      <apidata name="OnFontChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})">
      <topicdata group="api" />
      <apidata name="OnForeColorChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})">
      <topicdata group="api" />
      <apidata name="OnMove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Xna.Framework.Vector2" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})">
      <topicdata group="api" />
      <apidata name="OnTextChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Label.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Refresh">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Label.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Text" />
      <setter name="set_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.Label.TextChanged">
      <topicdata group="api" />
      <apidata name="TextChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TextChanged" />
      <remover name="remove_TextChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Items.PictureBox">
      <topicdata group="api" />
      <apidata name="PictureBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="Overload:Mentula.GuiItems.Items.PictureBox.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.PictureBox.#ctor">
          <element api="M:Mentula.GuiItems.Items.PictureBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)" />
          <element api="M:Mentula.GuiItems.Items.PictureBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)" />
        </element>
        <element api="P:Mentula.GuiItems.Items.PictureBox.Image" />
        <element api="M:Mentula.GuiItems.Items.PictureBox.OnSizeModeChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Mentula.GuiItems.Core.ResizeMode})" />
        <element api="M:Mentula.GuiItems.Items.PictureBox.Refresh" />
        <element api="P:Mentula.GuiItems.Items.PictureBox.SizeMode" />
        <element api="E:Mentula.GuiItems.Items.PictureBox.SizeModeChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Items.PictureBox">
      <topicdata name="PictureBox" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Items.PictureBox" />
      <apidata name="PictureBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Mentula.GuiItems.Items.PictureBox.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Items.PictureBox.OnSizeModeChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Mentula.GuiItems.Core.ResizeMode})" />
        <element api="M:Mentula.GuiItems.Items.PictureBox.Refresh" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Items.PictureBox">
      <topicdata name="PictureBox" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Items.PictureBox" />
      <apidata name="PictureBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.PictureBox.Image" />
        <element api="P:Mentula.GuiItems.Items.PictureBox.SizeMode" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Items.PictureBox">
      <topicdata name="PictureBox" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Items.PictureBox" />
      <apidata name="PictureBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="E:Mentula.GuiItems.Items.PictureBox.SizeModeChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Items.PictureBox">
      <topicdata name="PictureBox" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Items.PictureBox" />
      <apidata name="PictureBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.PictureBox.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.PictureBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)" />
        <element api="M:Mentula.GuiItems.Items.PictureBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.PictureBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.PictureBox.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.PictureBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.PictureBox.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="bounds">
          <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.PictureBox.Image">
      <topicdata group="api" />
      <apidata name="Image" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Image" />
      <setter name="set_Image" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Graphics.Texture2D" ref="true" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.PictureBox.OnSizeModeChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Mentula.GuiItems.Core.ResizeMode})">
      <topicdata group="api" />
      <apidata name="OnSizeModeChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.PictureBox.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Refresh">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.PictureBox.SizeMode">
      <topicdata group="api" />
      <apidata name="SizeMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SizeMode" />
      <setter name="set_SizeMode" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.PictureBox.SizeModeChanged">
      <topicdata group="api" />
      <apidata name="SizeModeChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SizeModeChanged" />
      <remover name="remove_SizeModeChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:Mentula.GuiItems.Core.ResizeMode" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.PictureBox" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Items.ProgressBar">
      <topicdata group="api" />
      <apidata name="ProgressBar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="Overload:Mentula.GuiItems.Items.ProgressBar.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.ProgressBar.#ctor">
          <element api="M:Mentula.GuiItems.Items.ProgressBar.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)" />
          <element api="M:Mentula.GuiItems.Items.ProgressBar.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)" />
        </element>
        <element api="P:Mentula.GuiItems.Items.ProgressBar.BorderStyle" />
        <element api="F:Mentula.GuiItems.Items.ProgressBar.data" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.DefaultBounds" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.DefaultForeColor" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.Inverted" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.MaxiumValue" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.MinimumValue" />
        <element api="M:Mentula.GuiItems.Items.ProgressBar.OnValueChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Int32})" />
        <element api="M:Mentula.GuiItems.Items.ProgressBar.Refresh" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.Value" />
        <element api="E:Mentula.GuiItems.Items.ProgressBar.ValueChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Items.ProgressBar">
      <topicdata name="ProgressBar" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Items.ProgressBar" />
      <apidata name="ProgressBar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Mentula.GuiItems.Items.ProgressBar.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Items.ProgressBar.OnValueChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Int32})" />
        <element api="M:Mentula.GuiItems.Items.ProgressBar.Refresh" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Items.ProgressBar">
      <topicdata name="ProgressBar" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Items.ProgressBar" />
      <apidata name="ProgressBar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.DefaultBounds" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.DefaultForeColor" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.Inverted" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.MaxiumValue" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.MinimumValue" />
        <element api="P:Mentula.GuiItems.Items.ProgressBar.Value" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Items.ProgressBar">
      <topicdata name="ProgressBar" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Items.ProgressBar" />
      <apidata name="ProgressBar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="E:Mentula.GuiItems.Items.ProgressBar.ValueChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Items.ProgressBar">
      <topicdata name="ProgressBar" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Items.ProgressBar" />
      <apidata name="ProgressBar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="F:Mentula.GuiItems.Items.ProgressBar.data" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.ProgressBar.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.ProgressBar.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)" />
        <element api="M:Mentula.GuiItems.Items.ProgressBar.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.ProgressBar.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.ProgressBar.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.ProgressBar.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.ProgressBar.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="bounds">
          <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.ProgressBar.BorderStyle">
      <topicdata group="api" />
      <apidata name="BorderStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BorderStyle" />
      <setter name="set_BorderStyle" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Items.ProgressBar.data">
      <topicdata group="api" />
      <apidata name="data" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.ProgressBar.DefaultBounds">
      <topicdata group="api" />
      <apidata name="DefaultBounds" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultBounds" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.ProgressBar.DefaultForeColor">
      <topicdata group="api" />
      <apidata name="DefaultForeColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultForeColor" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.ProgressBar.Inverted">
      <topicdata group="api" />
      <apidata name="Inverted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Inverted" />
      <setter name="set_Inverted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.ProgressBar.MaxiumValue">
      <topicdata group="api" />
      <apidata name="MaxiumValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_MaxiumValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.ProgressBar.MinimumValue">
      <topicdata group="api" />
      <apidata name="MinimumValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_MinimumValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.ProgressBar.OnValueChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Int32})">
      <topicdata group="api" />
      <apidata name="OnValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.ProgressBar.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Refresh">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.ProgressBar.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.ProgressBar.ValueChanged">
      <topicdata group="api" />
      <apidata name="ValueChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ValueChanged" />
      <remover name="remove_ValueChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.ProgressBar" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Items.Slider">
      <topicdata group="api" />
      <apidata name="Slider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="Overload:Mentula.GuiItems.Items.Slider.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.Slider.#ctor">
          <element api="M:Mentula.GuiItems.Items.Slider.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)" />
          <element api="M:Mentula.GuiItems.Items.Slider.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)" />
        </element>
        <element api="P:Mentula.GuiItems.Items.Slider.BorderStyle" />
        <element api="F:Mentula.GuiItems.Items.Slider.data" />
        <element api="P:Mentula.GuiItems.Items.Slider.DefaultBounds" />
        <element api="P:Mentula.GuiItems.Items.Slider.MaximumValue" />
        <element api="P:Mentula.GuiItems.Items.Slider.MinimumValue" />
        <element api="E:Mentula.GuiItems.Items.Slider.MouseDown" />
        <element api="M:Mentula.GuiItems.Items.Slider.OnClick(System.Object,Mentula.GuiItems.Core.MouseEventArgs)" />
        <element api="M:Mentula.GuiItems.Items.Slider.OnMouseDown(System.Object,Mentula.GuiItems.Core.MouseEventArgs)" />
        <element api="M:Mentula.GuiItems.Items.Slider.OnValueChanged(System.Object,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Int32})" />
        <element api="M:Mentula.GuiItems.Items.Slider.Refresh" />
        <element api="P:Mentula.GuiItems.Items.Slider.SliderBarDimentions" />
        <element api="M:Mentula.GuiItems.Items.Slider.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Items.Slider.Value" />
        <element api="E:Mentula.GuiItems.Items.Slider.ValueChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Items.Slider">
      <topicdata name="Slider" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Items.Slider" />
      <apidata name="Slider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Mentula.GuiItems.Items.Slider.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Items.Slider.OnClick(System.Object,Mentula.GuiItems.Core.MouseEventArgs)" />
        <element api="M:Mentula.GuiItems.Items.Slider.OnMouseDown(System.Object,Mentula.GuiItems.Core.MouseEventArgs)" />
        <element api="M:Mentula.GuiItems.Items.Slider.OnValueChanged(System.Object,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Int32})" />
        <element api="M:Mentula.GuiItems.Items.Slider.Refresh" />
        <element api="M:Mentula.GuiItems.Items.Slider.Update(Microsoft.Xna.Framework.Input.MouseState)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Items.Slider">
      <topicdata name="Slider" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Items.Slider" />
      <apidata name="Slider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Bounds" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.Slider.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Slider.DefaultBounds" />
        <element api="P:Mentula.GuiItems.Items.Slider.MaximumValue" />
        <element api="P:Mentula.GuiItems.Items.Slider.MinimumValue" />
        <element api="P:Mentula.GuiItems.Items.Slider.SliderBarDimentions" />
        <element api="P:Mentula.GuiItems.Items.Slider.Value" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Items.Slider">
      <topicdata name="Slider" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Items.Slider" />
      <apidata name="Slider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="E:Mentula.GuiItems.Items.Slider.MouseDown" />
        <element api="E:Mentula.GuiItems.Items.Slider.ValueChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Items.Slider">
      <topicdata name="Slider" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Items.Slider" />
      <apidata name="Slider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="F:Mentula.GuiItems.Items.Slider.data" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.Slider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.Slider.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)" />
        <element api="M:Mentula.GuiItems.Items.Slider.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Slider.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.Slider.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Slider.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.Slider.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="bounds">
          <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Slider.BorderStyle">
      <topicdata group="api" />
      <apidata name="BorderStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BorderStyle" />
      <setter name="set_BorderStyle" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.BorderStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="F:Mentula.GuiItems.Items.Slider.data">
      <topicdata group="api" />
      <apidata name="data" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.ProgressData" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Slider.DefaultBounds">
      <topicdata group="api" />
      <apidata name="DefaultBounds" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultBounds" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Slider.MaximumValue">
      <topicdata group="api" />
      <apidata name="MaximumValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumValue" />
      <setter name="set_MaximumValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Slider.MinimumValue">
      <topicdata group="api" />
      <apidata name="MinimumValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumValue" />
      <setter name="set_MinimumValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.Slider.MouseDown">
      <topicdata group="api" />
      <apidata name="MouseDown" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MouseDown" />
      <remover name="remove_MouseDown" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.MouseEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Slider.OnClick(System.Object,Mentula.GuiItems.Core.MouseEventArgs)">
      <topicdata group="api" />
      <apidata name="OnClick" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.MouseEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Slider.OnMouseDown(System.Object,Mentula.GuiItems.Core.MouseEventArgs)">
      <topicdata group="api" />
      <apidata name="OnMouseDown" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.MouseEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Slider.OnValueChanged(System.Object,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Int32})">
      <topicdata group="api" />
      <apidata name="OnValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Slider.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Refresh">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Slider.SliderBarDimentions">
      <topicdata group="api" />
      <apidata name="SliderBarDimentions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SliderBarDimentions" />
      <setter name="set_SliderBarDimentions" />
      <returns>
        <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.Slider.Update(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="state">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.Slider.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.Slider.ValueChanged">
      <topicdata group="api" />
      <apidata name="ValueChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ValueChanged" />
      <remover name="remove_ValueChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.Slider" ref="true" />
      </containers>
    </api>
    <api id="T:Mentula.GuiItems.Items.TextBox">
      <topicdata group="api" />
      <apidata name="TextBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="Overload:Mentula.GuiItems.Items.TextBox.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.Label.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Label.Bounds" />
        <element api="F:Mentula.GuiItems.Items.Label.font" />
        <element api="P:Mentula.GuiItems.Items.Label.Font" />
        <element api="E:Mentula.GuiItems.Items.Label.FontChanged" />
        <element api="F:Mentula.GuiItems.Items.Label.foregroundRectangle" />
        <element api="P:Mentula.GuiItems.Items.Label.ForegroundRectangle" />
        <element api="M:Mentula.GuiItems.Items.Label.GetLineCount" />
        <element api="P:Mentula.GuiItems.Items.Label.LineStart" />
        <element api="M:Mentula.GuiItems.Items.Label.OnFontChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.SpriteFont})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="P:Mentula.GuiItems.Items.Label.Text" />
        <element api="E:Mentula.GuiItems.Items.Label.TextChanged" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Mentula.GuiItems.Items.TextBox.#ctor">
          <element api="M:Mentula.GuiItems.Items.TextBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
          <element api="M:Mentula.GuiItems.Items.TextBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        </element>
        <element api="E:Mentula.GuiItems.Items.TextBox.Confirmed" />
        <element api="P:Mentula.GuiItems.Items.TextBox.DefaultMinimumSize" />
        <element api="M:Mentula.GuiItems.Items.TextBox.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="P:Mentula.GuiItems.Items.TextBox.FlickerStyle" />
        <element api="E:Mentula.GuiItems.Items.TextBox.FocusChanged" />
        <element api="P:Mentula.GuiItems.Items.TextBox.Focused" />
        <element api="M:Mentula.GuiItems.Items.TextBox.HandleAutoSize" />
        <element api="P:Mentula.GuiItems.Items.TextBox.MaximumSize" />
        <element api="P:Mentula.GuiItems.Items.TextBox.MaxLength" />
        <element api="P:Mentula.GuiItems.Items.TextBox.MinimumSize" />
        <element api="P:Mentula.GuiItems.Items.TextBox.MultiLine" />
        <element api="M:Mentula.GuiItems.Items.TextBox.OnFocusChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Items.TextBox.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="P:Mentula.GuiItems.Items.TextBox.PasswordChar" />
        <element api="M:Mentula.GuiItems.Items.TextBox.Refresh" />
        <element api="Overload:Mentula.GuiItems.Items.TextBox.Update">
          <element api="M:Mentula.GuiItems.Items.TextBox.Update(Microsoft.Xna.Framework.Input.MouseState)" />
          <element api="M:Mentula.GuiItems.Items.TextBox.Update(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.KeyboardState,System.Single)" />
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
      </containers>
    </api>
    <api id="Methods.T:Mentula.GuiItems.Items.TextBox">
      <topicdata name="TextBox" group="list" subgroup="Methods" typeTopicId="T:Mentula.GuiItems.Items.TextBox" />
      <apidata name="TextBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Mentula.GuiItems.Items.TextBox.Dispose">
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose" />
          <element api="M:Mentula.GuiItems.Core.GuiItem.Dispose(System.Boolean)" />
        </element>
        <element api="M:Mentula.GuiItems.Core.GuiItem.Finalize" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetMouseEventArgs" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.GetRotatedMouse(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Hide" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.MoveRelative(Mentula.GuiItems.Core.Anchor,System.Nullable{System.Single},System.Nullable{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnBackgroundImageChaned(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.Texture2D})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnNameChange(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnResize(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Rectangle})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnRotationChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Single})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.OnVisibilityChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.PerformClick" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.Show" />
        <element api="M:Mentula.GuiItems.Core.GuiItem.ToString" />
        <element api="M:Mentula.GuiItems.Items.Label.GetLineCount" />
        <element api="M:Mentula.GuiItems.Items.Label.OnFontChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Graphics.SpriteFont})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnForeColorChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Color})" />
        <element api="M:Mentula.GuiItems.Items.Label.OnMove(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{Microsoft.Xna.Framework.Vector2})" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Mentula.GuiItems.Items.TextBox.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)" />
        <element api="M:Mentula.GuiItems.Items.TextBox.HandleAutoSize" />
        <element api="M:Mentula.GuiItems.Items.TextBox.OnFocusChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})" />
        <element api="M:Mentula.GuiItems.Items.TextBox.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})" />
        <element api="M:Mentula.GuiItems.Items.TextBox.Refresh" />
        <element api="Overload:Mentula.GuiItems.Items.TextBox.Update">
          <element api="M:Mentula.GuiItems.Items.TextBox.Update(Microsoft.Xna.Framework.Input.MouseState)" />
          <element api="M:Mentula.GuiItems.Items.TextBox.Update(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.KeyboardState,System.Single)" />
        </element>
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" />
      </containers>
    </api>
    <api id="Properties.T:Mentula.GuiItems.Items.TextBox">
      <topicdata name="TextBox" group="list" subgroup="Properties" typeTopicId="T:Mentula.GuiItems.Items.TextBox" />
      <apidata name="TextBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.BackgroundImage" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Disposing" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Enabled" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.ForeColor" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Height" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.IsDisposed" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Name" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Origin" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Position" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Rotation" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Size" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressDraw" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.SuppressUpdate" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Visible" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Width" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.X" />
        <element api="P:Mentula.GuiItems.Core.GuiItem.Y" />
        <element api="P:Mentula.GuiItems.Items.Label.AutoSize" />
        <element api="P:Mentula.GuiItems.Items.Label.BorderStyle" />
        <element api="P:Mentula.GuiItems.Items.Label.Bounds" />
        <element api="P:Mentula.GuiItems.Items.Label.Font" />
        <element api="P:Mentula.GuiItems.Items.Label.ForegroundRectangle" />
        <element api="P:Mentula.GuiItems.Items.Label.LineStart" />
        <element api="P:Mentula.GuiItems.Items.Label.Text" />
        <element api="P:Mentula.GuiItems.Items.TextBox.DefaultMinimumSize" />
        <element api="P:Mentula.GuiItems.Items.TextBox.FlickerStyle" />
        <element api="P:Mentula.GuiItems.Items.TextBox.Focused" />
        <element api="P:Mentula.GuiItems.Items.TextBox.MaximumSize" />
        <element api="P:Mentula.GuiItems.Items.TextBox.MaxLength" />
        <element api="P:Mentula.GuiItems.Items.TextBox.MinimumSize" />
        <element api="P:Mentula.GuiItems.Items.TextBox.MultiLine" />
        <element api="P:Mentula.GuiItems.Items.TextBox.PasswordChar" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" />
      </containers>
    </api>
    <api id="Events.T:Mentula.GuiItems.Items.TextBox">
      <topicdata name="TextBox" group="list" subgroup="Events" typeTopicId="T:Mentula.GuiItems.Items.TextBox" />
      <apidata name="TextBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.BackgroundImageChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Click" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.ForeColorChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Hover" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Move" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.NameChanged" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Resize" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.Rotated" />
        <element api="E:Mentula.GuiItems.Core.GuiItem.VisibilityChanged" />
        <element api="E:Mentula.GuiItems.Items.Label.FontChanged" />
        <element api="E:Mentula.GuiItems.Items.Label.TextChanged" />
        <element api="E:Mentula.GuiItems.Items.TextBox.Confirmed" />
        <element api="E:Mentula.GuiItems.Items.TextBox.FocusChanged" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" />
      </containers>
    </api>
    <api id="Fields.T:Mentula.GuiItems.Items.TextBox">
      <topicdata name="TextBox" group="list" subgroup="Fields" typeTopicId="T:Mentula.GuiItems.Items.TextBox" />
      <apidata name="TextBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Mentula.GuiItems.Core.GuiItem.batch" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.leftDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.over" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.rightDown" />
        <element api="F:Mentula.GuiItems.Core.GuiItem.textures" />
        <element api="F:Mentula.GuiItems.Items.Label.font" />
        <element api="F:Mentula.GuiItems.Items.Label.foregroundRectangle" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.TextBox.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.TextBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
        <element api="M:Mentula.GuiItems.Items.TextBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="Overload:Mentula.GuiItems.Items.TextBox.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Mentula.GuiItems.Items.TextBox.Update(Microsoft.Xna.Framework.Input.MouseState)" />
        <element api="M:Mentula.GuiItems.Items.TextBox.Update(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.KeyboardState,System.Single)" />
      </elements>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.TextBox.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Mentula.GuiItems.Items.TextBox.#ctor" />
      <parameters>
        <parameter name="sb">
          <referenceTo>
            <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="bounds">
          <type api="T:Microsoft.Xna.Framework.Rectangle" ref="false" />
        </parameter>
        <parameter name="font">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteFont" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.TextBox.Confirmed">
      <topicdata group="api" />
      <apidata name="Confirmed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Confirmed" />
      <remover name="remove_Confirmed" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.GuiItemEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.TextBox.DefaultMinimumSize">
      <topicdata group="api" />
      <apidata name="DefaultMinimumSize" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultMinimumSize" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
      <topicdata group="api" />
      <apidata name="Draw" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="spriteBatch">
          <type api="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.TextBox.FlickerStyle">
      <topicdata group="api" />
      <apidata name="FlickerStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_FlickerStyle" />
      <setter name="set_FlickerStyle" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.FlickerStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="E:Mentula.GuiItems.Items.TextBox.FocusChanged">
      <topicdata group="api" />
      <apidata name="FocusChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_FocusChanged" />
      <remover name="remove_FocusChanged" />
      <eventhandler>
        <type api="T:Mentula.GuiItems.Core.ValueChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.TextBox.Focused">
      <topicdata group="api" />
      <apidata name="Focused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Focused" />
      <setter name="set_Focused" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.HandleAutoSize">
      <topicdata group="api" />
      <apidata name="HandleAutoSize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Items.Label.HandleAutoSize">
          <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.TextBox.MaximumSize">
      <topicdata group="api" />
      <apidata name="MaximumSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumSize" />
      <setter name="set_MaximumSize" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.TextBox.MaxLength">
      <topicdata group="api" />
      <apidata name="MaxLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxLength" />
      <setter name="set_MaxLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.TextBox.MinimumSize">
      <topicdata group="api" />
      <apidata name="MinimumSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumSize" />
      <setter name="set_MinimumSize" />
      <returns>
        <type api="T:Mentula.GuiItems.Core.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.TextBox.MultiLine">
      <topicdata group="api" />
      <apidata name="MultiLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MultiLine" />
      <setter name="set_MultiLine" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.OnFocusChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.Boolean})">
      <topicdata group="api" />
      <apidata name="OnFocusChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})">
      <topicdata group="api" />
      <apidata name="OnTextChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Items.Label.OnTextChanged(Mentula.GuiItems.Core.GuiItem,Mentula.GuiItems.Core.ValueChangedEventArgs{System.String})">
          <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sender">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Mentula.GuiItems.Core.ValueChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="P:Mentula.GuiItems.Items.TextBox.PasswordChar">
      <topicdata group="api" />
      <apidata name="PasswordChar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PasswordChar" />
      <setter name="set_PasswordChar" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Items.Label.Refresh">
          <type api="T:Mentula.GuiItems.Items.Label" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.Update(Microsoft.Xna.Framework.Input.MouseState)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.TextBox.Update" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Mentula.GuiItems.Core.GuiItem.Update(Microsoft.Xna.Framework.Input.MouseState)">
          <type api="T:Mentula.GuiItems.Core.GuiItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="state">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
    <api id="M:Mentula.GuiItems.Items.TextBox.Update(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.KeyboardState,System.Single)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Mentula.GuiItems.Items.TextBox.Update" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mState">
          <type api="T:Microsoft.Xna.Framework.Input.MouseState" ref="false" />
        </parameter>
        <parameter name="kState">
          <type api="T:Microsoft.Xna.Framework.Input.KeyboardState" ref="false" />
        </parameter>
        <parameter name="deltaTime">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="XnaGuiItems" module="XnaGuiItems" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Mentula.GuiItems.Items" />
        <type api="T:Mentula.GuiItems.Items.TextBox" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>